<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Weclome Back</title>
  
  <subtitle>Keithxodoy</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-20T07:37:55.528Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Keithxodoy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Big_Data</title>
    <link href="http://yoursite.com/2018/07/20/Big-Data/"/>
    <id>http://yoursite.com/2018/07/20/Big-Data/</id>
    <published>2018-07-20T07:36:09.000Z</published>
    <updated>2018-07-20T07:37:55.528Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python大数据" scheme="http://yoursite.com/tags/Python%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>CSS学习</title>
    <link href="http://yoursite.com/2018/07/12/CSS%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/07/12/CSS学习/</id>
    <published>2018-07-12T14:47:38.000Z</published>
    <updated>2018-07-20T02:56:06.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS入门学习"><a href="#CSS入门学习" class="headerlink" title="CSS入门学习"></a>CSS入门学习</h1><a id="more"></a><h1 id="CSS-基础"><a href="#CSS-基础" class="headerlink" title="CSS 基础"></a>CSS 基础</h1><h2 id="CSS-语法"><a href="#CSS-语法" class="headerlink" title="CSS 语法"></a>CSS 语法</h2><h3 id="CSS定义方式"><a href="#CSS定义方式" class="headerlink" title="CSS定义方式"></a>CSS定义方式</h3><blockquote><p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明。</p></blockquote><p><code>selector {declaration1; declaration2; ... declarationN }</code></p><p><img src="http://www.w3school.com.cn/i/ct_css_selector.gif" alt="img"></p><h3 id="CSS-值的写法"><a href="#CSS-值的写法" class="headerlink" title="CSS 值的写法"></a>CSS 值的写法</h3><p>例</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: <span class="number">#ff0000</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: <span class="number">#f00</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: <span class="built_in">rgb</span>(255,0,0); &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">color</span>: <span class="built_in">rgb</span>(100%,0%,0%); &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;<span class="attribute">font-family</span>: <span class="string">"sans serif"</span>;&#125;</span><br></pre></td></tr></table></figure><p>多重声明</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: Georgia, Palatino, Serif;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong></p></blockquote><p>是否包含空格<strong>不会影响</strong> CSS 在浏览器的工作效果，<br></p><blockquote><p>同样，与 XHTML 不同，CSS 对大小写不敏感。<br><br>不过存在一个例外：如果涉及到与 HTML 文档一起工作的话，class 和 id 名称对大小写是敏感的</p></blockquote><h3 id="CSS-高级语法"><a href="#CSS-高级语法" class="headerlink" title="CSS 高级语法"></a>CSS 高级语法</h3><blockquote><p>根据 CSS，子元素从父元素继承属性.<br>通过 CSS 继承，子元素将继承最高级元素（在本例中是 body）所拥有的属性（这些子元素诸如 p, td, ul, ol, ul, li, dl, dt,和 dd）。<br>对于部分旧式浏览器,它不仅忽略继承，而且也忽略应用于 body 元素的规则。</p></blockquote><p><strong>解决</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>  &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: Verdana, sans-serif;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span>, <span class="selector-tag">td</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">li</span>, <span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>  &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: Verdana, sans-serif;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>如果不想使某些子类继承父类的属性，可以针对该子类单独设置其属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>  &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: Verdana, sans-serif;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span>  &#123;</span><br><span class="line">     <span class="attribute">font-family</span>: Times, <span class="string">"Times New Roman"</span>, serif;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h3 id="CSS派生选择器"><a href="#CSS派生选择器" class="headerlink" title="CSS派生选择器"></a>CSS派生选择器</h3><blockquote><p>派生选择器可以使得根据文档的上下文关系来确定某个标签的样式。通过合理地使用派生选择器，可以使 HTML 代码变得更加整洁。</p></blockquote><p>如将列表中的 strong 元素变为斜体字，可以定义一个派生选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多例子</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span> <span class="selector-tag">strong</span> &#123;</span><br><span class="line">     <span class="attribute">color</span>: blue;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CSS-id-选择器"><a href="#CSS-id-选择器" class="headerlink" title="CSS id 选择器"></a>CSS id 选择器</h3><blockquote><p>id选择器可以为标有特定id的HTML元素指定特定的样式</p></blockquote><blockquote><p>使用 “#”定义</p></blockquote><p><font color="red"><b>注意</b></font> id 属性只能在每个 HTML 文档中出现一次。</p><p><br></p><ul><li>一个选择器，多种用法 </li></ul><blockquote><p>即使被标注为 sidebar 的元素只能在文档中出现一次，这个 id 选择器作为派生选择器也可以被使用很多次：</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#sidebar</span> <span class="selector-tag">h</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: lem;</span><br><span class="line">  <span class="attribute">margin</span>:  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>单独的选择器</li></ul><blockquote><p>id 选择器即使不被用来创建派生选择器，它也可以独立发挥作用</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dotted <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="CSS-类选择器"><a href="#CSS-类选择器" class="headerlink" title="CSS 类选择器"></a>CSS 类选择器</h3><p>示例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>HTML 中类可以使用多次</p></blockquote><p>h1 和 p 元素都有 center 类。这意味着两者都将遵守 “.center” 选择器中的规则。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">This heading will be center-aligned</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">This paragraph will also be center-aligned.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color="red"><b>注意：</b></font>:类名的第一个字符不能使用数字！</p><h3 id="CSS-属性选择器"><a href="#CSS-属性选择器" class="headerlink" title="CSS 属性选择器"></a>CSS 属性选择器</h3><p>先来看几个例子</p><ol><li><strong>将所有含有title属性的元素设置颜色</strong></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined">  </span></span><br><span class="line"><span class="css"><span class="selector-attr">[title]</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">  color: blue;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>将含有 title 为 keithxodoy 的元素设置颜色</strong></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> &gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-attr">[title=keithxodoy]</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">  color: blue;</span></span><br><span class="line"><span class="undefined">&#125; </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>将含有 title 内容包含 hello 的元素设置颜色</strong></li></ol><ul><li>适用于由空格分隔的属性值<br><code>title=&quot;hello keithxodoy&quot;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-attr">[title~=hello]</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">  color: blue;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>适用于由连字符分隔的属性值<br><code>title=&quot;hello-keithxodoy</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> &gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-attr">[title|=hello]</span> </span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="undefined">  color: blue;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br><br><strong>其余用法</strong></p><table><thead><tr><th>选择器</th><th>功能</th></tr></thead><tbody><tr><td>[attribute^=value]</td><td>匹配属性值以指定值开头的每个元素</td></tr><tr><td>[attribute$=value]</td><td>匹配属性值以指定值结尾的每个元素</td></tr><tr><td>[attribute*=value]</td><td>匹配属性值中包含指定值的每个元素</td></tr></tbody></table><h2 id="CSS-创建样式表"><a href="#CSS-创建样式表" class="headerlink" title="CSS 创建样式表"></a>CSS 创建样式表</h2><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><blockquote><p>背景 ： 当页面所需的css样式过多，而且大多是重复相同的样式时，不易在HTML文件中单独呈现，于是使用 link标签，将外部的一个 css 文件引入至 HTML 中</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style_set.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color="gray"><strong>注意</strong></font>:最好不要再属性值和单位之间留有空格，否则会在一些浏览器中无法正常工作</p><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><blockquote><p>背景 ： 当某个文档需要特殊样式时，适合使用内部样式表</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  p &#123;</span></span><br><span class="line"><span class="undefined">    margin-left: 20px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h3><p><code>&lt;p style=&quot;color: sienna; margin-left: 20px&quot;&gt;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CSS入门学习&quot;&gt;&lt;a href=&quot;#CSS入门学习&quot; class=&quot;headerlink&quot; title=&quot;CSS入门学习&quot;&gt;&lt;/a&gt;CSS入门学习&lt;/h1&gt;
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Computer Science</title>
    <link href="http://yoursite.com/2018/07/02/Computer%20Science/"/>
    <id>http://yoursite.com/2018/07/02/Computer Science/</id>
    <published>2018-07-02T08:05:42.000Z</published>
    <updated>2018-07-11T08:12:16.222Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机科学理论"><a href="#计算机科学理论" class="headerlink" title="计算机科学理论"></a>计算机科学理论</h1><a id="more"></a><h2 id="比特"><a href="#比特" class="headerlink" title="比特"></a>比特</h2><p>BIT – binary digit</p><p>8 BIT – 1 Byte</p><h3 id="计算机中数的表示"><a href="#计算机中数的表示" class="headerlink" title="计算机中数的表示"></a>计算机中数的表示</h3><p>例如 7  –二进制 以2的幂计算</p><p>十进制中 ： 1 2 4 8 … <br><br>二进制中 ： 1 1 1 0 …</p><p>即 7 的表示为 <code>0111</code></p><h3 id="硬盘组成"><a href="#硬盘组成" class="headerlink" title="硬盘组成"></a>硬盘组成</h3><blockquote><p>由非常微小的磁性粒子组成，有规定的排列顺序，<br>就如小磁针，南北指向可以代表比特中的 0  1 ,就由这些磁针来储存数据</p></blockquote><p><br></p><h2 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> </span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello,World!\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="printf输出实例"><a href="#printf输出实例" class="headerlink" title="printf输出实例"></a>printf输出实例</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> name = <span class="string">"keithxodoy"</span>;</span><br><span class="line"><span class="keyword">float</span> num = <span class="number">5.264</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello,%s！\n"</span>, name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="keyword">sizeof</span>(i) );</span><br></pre></td></tr></table></figure><p><code>sizeof</code> ==&gt; 输出数据类型的长度</p><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a><strong>FAQ</strong></h2><ul><li>对硬盘或软盘进行格式化时会发生什么？</li></ul><p><font color="orange"><strong>解答</strong></font> <br><br>不会产生很大改变，对盘进行格式化（分区）只会修改几字节或几千字节的信息，使得电脑无法知道原先的文件或文件夹被存放至哪个位置，但是这些数据仍在原先的位置存储着</p><ul><li>编译器作用 ？</li></ul><p><font color="orange"><strong>解答</strong></font> <br><br>将代码文件编译为二进制文件</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;计算机科学理论&quot;&gt;&lt;a href=&quot;#计算机科学理论&quot; class=&quot;headerlink&quot; title=&quot;计算机科学理论&quot;&gt;&lt;/a&gt;计算机科学理论&lt;/h1&gt;
    
    </summary>
    
      <category term="Basic Knowledge" scheme="http://yoursite.com/categories/Basic-Knowledge/"/>
    
    
      <category term="Computer Science" scheme="http://yoursite.com/tags/Computer-Science/"/>
    
  </entry>
  
  <entry>
    <title>PHP</title>
    <link href="http://yoursite.com/2018/06/30/PHP/"/>
    <id>http://yoursite.com/2018/06/30/PHP/</id>
    <published>2018-06-30T14:34:01.000Z</published>
    <updated>2018-07-20T03:07:47.012Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP入门"><a href="#PHP入门" class="headerlink" title="PHP入门"></a>PHP入门</h1><a id="more"></a><h2 id="What-is-PHP"><a href="#What-is-PHP" class="headerlink" title="What is PHP???"></a>What is PHP???</h2><blockquote><p>PHP是一种开源的通用计算机脚本语言，尤其适用于网络开发并可嵌入HTML中使用</p><p>是一种创建动态交互性站点的强有力的服务器端脚本语言</p></blockquote><ul><li><p>PHP： <code>Hypertext Preprocessor</code> –超文本预处理器</p></li><li><p><strong>DNS</strong></p></li></ul><p>DNS (Domin Name System 域名系统) ： 因特网上作为域名和 IP 地址相互映射的一个分布式数据库，能使用户更方便的访问互联网</p><p><strong>域名解析</strong></p><blockquote><p>用户通过主机名，最终得到该主机名对应的 IP 地址的过程</p></blockquote><p><strong>步骤：</strong></p><p>用户输入域名 localhost –&gt; DNS (localhost 127.0.0.1) –&gt; 服务器电脑</p><h2 id="PHP基本语法"><a href="#PHP基本语法" class="headerlink" title="PHP基本语法"></a>PHP基本语法</h2><blockquote><p>php脚本可以放置在文档任意位置</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// PHP代码</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本输出命令"><a href="#文本输出命令" class="headerlink" title="文本输出命令"></a>文本输出命令</h3><p><strong>echo</strong> &amp; <strong>print</strong></p><p>输出字符串可以包含<strong>HTML标签</strong></p><h4 id="echo-语句"><a href="#echo-语句" class="headerlink" title="echo 语句"></a>echo 语句</h4><p>echo - 可以输出一个或多个<strong>字符串</strong></p><p>echo 输出样式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$txt = <span class="string">"学习PHP"</span>；</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'Jan'</span>, <span class="string">'Ame'</span>, <span class="string">'Chi'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $txt;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"我要 $txt"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"想去的国家&#123;$arr[1]&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="print-语句"><a href="#print-语句" class="headerlink" title="print 语句"></a>print 语句</h4><p>print - 只允许输出<strong>一个字符串</strong>，返回值为 1</p><blockquote><p>如果字符串成功显示则返回true，否则返回false。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$txt = <span class="string">"学习PHP"</span>；</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'Jan'</span>, <span class="string">'Ame'</span>, <span class="string">'Chi'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> $txt;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"我要 $txt"</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"想去的国家&#123;$arr[1]&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h4><ul><li><p>echo 输出速度比 print 快，echo 无返回值， print 返回值为 1</p></li><li><p><code>print $a</code> 和 <code>print &quot;$a&quot;</code> 效果相同，echo 同理</p></li><li><p><code>print &quot;text$a text&quot;</code> 和 <code>print &quot;text $a text&quot;</code> 和 <code>print &quot;text{$a}text&quot;</code> 都可以正常显示 $a 的值，不使用 {} 则 &amp;a 之后必须<strong>有一个空格</strong>，echo 同理</p></li></ul><hr><h3 id="文本注释"><a href="#文本注释" class="headerlink" title="文本注释"></a>文本注释</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// PHP单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">PHP</span></span><br><span class="line"><span class="comment">多行</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><br></p><font color="orange"><strong>须知</strong></font><ol><li>PHP中每个代码行必须以<strong>分号</strong>结束，以使指令集区分开来</li></ol><h3 id="PHP变量"><a href="#PHP变量" class="headerlink" title="PHP变量"></a>PHP变量</h3><blockquote><p>PHP为一门弱类型语言，不必向 PHP 声明该变量的数据类型。</p></blockquote><blockquote><p>PHP 会根据变量的值，自动把变量转换为正确的数据类型。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$x=<span class="number">5</span>;</span><br><span class="line">$y=<span class="number">6</span>;</span><br><span class="line">$z=$x+$y;</span><br><span class="line">$txt=<span class="string">"Hello,World!"</span></span><br><span class="line"><span class="keyword">echo</span> $z;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>规则</strong></p><ul><li>变量以 $ 符号开始，后面跟着变量的名称</li><li>变量名不能包含空格</li><li>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</li></ul><p><strong>PHP变量作用域</strong></p><ul><li><p>PHP 有四种不同的变量作用域：</p><ul><li>local </li><li>global</li><li>static</li><li>parameter</li></ul></li></ul><p><br></p><p><strong>局部与全局作用域</strong></p><p>实例：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$x=<span class="number">5</span>; <span class="comment">// 全局变量 </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    $y=<span class="number">10</span>; <span class="comment">// 局部变量 </span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt;测试函数内变量:&lt;p&gt;"</span>; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"变量 x 为: $x"</span>; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"变量 y 为: $y"</span>; </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">myTest(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;测试函数外变量:&lt;p&gt;"</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"变量 x 为: $x"</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"变量 y 为: $y"</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>global全局变量</strong></p><blockquote><p>函数内访问全局变量需要 <strong>global</strong> 关键字或者使用 <strong>$GLOBALS[index]</strong> 数组</p></blockquote><ul><li><code>global $x,$y;</code></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$x=<span class="number">5</span>;</span><br><span class="line">$y=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mytest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $GLOBALS[<span class="string">'y'</span>]=$GLOBALS[<span class="string">'x'</span>]+$GLOBALS[<span class="string">'y'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><font color="orange"><strong>注意</strong></font><p>在 php 中函数是有独立的作用域，所以局部变量会覆盖全局变量</p><p><br></p><p><strong>Static作用域</strong></p><blockquote><p>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> $x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">echo</span> $x;</span><br><span class="line">    $x++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>每次调用该函数时，该变量将会保留着函数前一次被调用时的值,且该变量仍然是函数的局部变量。</p></blockquote><p><strong>参数作用域</strong></p><p>参数是通过调用代码将值传递给函数的局部变量,并且在参数列表中声明的:<br><code>function mytest($x)</code></p><hr><h3 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h3><blockquote><p>常量是一个简单值得标识符，不可以在脚本中改变</p></blockquote><h4 id="设置PHP常量"><a href="#设置PHP常量" class="headerlink" title="设置PHP常量"></a>设置PHP常量</h4><p><strong>语法</strong></p><p><code>bool define ( string $name , mixed $value [, bool $case_insentitive = false ])</code></p><p><strong>解释</strong></p><ul><li><code>name</code>：必选参数，常量名称，即标志符</li><li><code>value</code>：必选参数，常量的值</li><li><code>case_insensitive</code>：可选参数，如果设置为TRUE，该常量则大小写不敏感。默认是大小写敏感的</li></ul><p>示例：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//不区分大小写的常量</span></span><br><span class="line">define(<span class="string">"Hello"</span>, <span class="string">"Keithxodoy"</span>, <span class="keyword">True</span>);</span><br><span class="line"><span class="keyword">echo</span> Hello;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><font color="red"><b>注意事项</b></font><ol><li>常量在定义后，默认是全局变量，可在任意脚本中使用</li></ol><hr><h3 id="PHP-EOF-heredoc"><a href="#PHP-EOF-heredoc" class="headerlink" title="PHP EOF (heredoc)"></a>PHP EOF (heredoc)</h3><blockquote><p>PHP EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个<strong>字串</strong>的方法。</p></blockquote><blockquote><p><strong>PHP 定界符 EOF 的作用就是按照原样，包括换行格式什么的，输出在其内部的东西</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&lt;&lt;&lt;EOF</span></span><br><span class="line"><span class="string">    &lt;h1&gt;标题&lt;/h1&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;段落&lt;/p&gt;</span></span><br><span class="line"><span class="string">EOF;</span></span><br><span class="line"><span class="comment">// 结束需要独立一行且前后不能空格</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><font color="gray"><b><br><br>1. 以 &lt;&lt;&lt;EOF 开始标记开始，以 EOF 结束标记结束，结束标记必须顶头写，不能有缩进和空格，且在结束标记末尾要有分号<br>2. EOF 可以用任意其它字符代替，只需保证结束标识与开始标识一致。<br>3. 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。<br>4. 当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义。<br>5. 在 heredoc 中，变量不需要用连接符 <strong>.</strong> 或 <strong>,</strong> 来拼接<br><br></b></font> <h3 id="PHP-数据类型"><a href="#PHP-数据类型" class="headerlink" title="PHP 数据类型"></a>PHP 数据类型</h3><blockquote><p>String Integer Float Boolean Array Object Null</p></blockquote><p>示例<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$x = <span class="string">"Hello ,world!"</span>;</span><br><span class="line">$y = <span class="number">520</span>;</span><br><span class="line">$z = <span class="number">52.1</span>;</span><br><span class="line">$a = <span class="keyword">True</span>;</span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">obj</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $color;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">what_color</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;color;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$b = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure></p><p><strong>拓展</strong></p><p>判断变量类型：<code>var_dump()</code></p><p><strong>说明：</strong>var_dump() 方法，判断一个变量的类型与长度，并输出变量的数值，如果变量有值，则输出是变量的值，并返回数据类型。显示关于一个或多个表达式的结构信息，包括表达式的类型与值.</p><blockquote><p>注意：用保证 var_dump 中的变量必须是存在的，如果变量不存在则返回 NULL.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP入门&quot;&gt;&lt;a href=&quot;#PHP入门&quot; class=&quot;headerlink&quot; title=&quot;PHP入门&quot;&gt;&lt;/a&gt;PHP入门&lt;/h1&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm</title>
    <link href="http://yoursite.com/2018/06/29/Algorithm/"/>
    <id>http://yoursite.com/2018/06/29/Algorithm/</id>
    <published>2018-06-29T05:29:28.000Z</published>
    <updated>2018-06-29T05:49:48.403Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><a id="more"></a><h2 id="初探算法"><a href="#初探算法" class="headerlink" title="初探算法"></a>初探算法</h2><p>Question: 猜价格</p><ul><li>价格大了</li><li>价格小了</li><li>猜对了</li></ul><hr><h2 id="递推算法"><a href="#递推算法" class="headerlink" title="递推算法"></a>递推算法</h2><h3 id="顺推法"><a href="#顺推法" class="headerlink" title="顺推法"></a>顺推法</h3><p><strong>斐波那契数列</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> fib[NUM] = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">2</span>; i&lt;num; i++)</span><br><span class="line">&#123;</span><br><span class="line">    fib[i] = fib[i<span class="number">-1</span>] + fib[i<span class="number">-2</span>] ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;num; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"兔子目前的总数为:%d\n"</span>, fib[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="逆推法"><a href="#逆推法" class="headerlink" title="逆推法"></a>逆推法</h3><p>案例 : 银行存款的提取利息<br>假设第48个月,利息为1000元</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Fetch 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Rate 0.0171</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> month[<span class="number">49</span>];  <span class="comment">//每个月的本利</span></span><br><span class="line">    <span class="keyword">int</span> i ;</span><br><span class="line">    month[<span class="number">48</span>] = (<span class="keyword">double</span>)Fetch;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">47</span>; i&gt;<span class="number">0</span>; i--)         <span class="comment">//由第48月的利息来倒推处第一个月</span></span><br><span class="line">    &#123;</span><br><span class="line">        month[i] = (month[i+<span class="number">1</span>]+Fetch)/(<span class="number">1</span>+Rate/<span class="number">12</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">48</span>; i&gt;<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"第%d月末的本利合计为:%.2f\n"</span>, i, month[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    getch();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;算法&quot;&gt;&lt;a href=&quot;#算法&quot; class=&quot;headerlink&quot; title=&quot;算法&quot;&gt;&lt;/a&gt;算法&lt;/h1&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://yoursite.com/categories/Algorithm/"/>
    
    
      <category term="Algorithm step" scheme="http://yoursite.com/tags/Algorithm-step/"/>
    
  </entry>
  
  <entry>
    <title>Python数学分析</title>
    <link href="http://yoursite.com/2018/06/28/Python%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2018/06/28/Python数学分析/</id>
    <published>2018-06-28T15:39:39.000Z</published>
    <updated>2018-06-29T04:28:56.025Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python数学分析" scheme="http://yoursite.com/tags/Python%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux教程.md</title>
    <link href="http://yoursite.com/2018/06/28/Linux%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/06/28/Linux教程/</id>
    <published>2018-06-28T15:27:31.000Z</published>
    <updated>2018-07-13T15:08:29.395Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LINUX-初探"><a href="#LINUX-初探" class="headerlink" title="LINUX 初探"></a>LINUX 初探</h1><a id="more"></a><h2 id="知识概念"><a href="#知识概念" class="headerlink" title="知识概念"></a>知识概念</h2><h3 id="网络概述"><a href="#网络概述" class="headerlink" title="网络概述"></a>网络概述</h3><p>1970年 — Linux元年<br>1969年 — Internet元年</p><ul><li><p><strong>局域网(LAN)</strong></p><pre><code>- Local Area Network : 指范围在几百米到十几公里内办公楼群或校区内的计算机相互连接所构成的计算机网络</code></pre></li><li><p><strong>城域网(MAN)</strong></p><pre><code>+ Metropolitan Area Network</code></pre></li></ul><ul><li><strong>广域网(WAN)</strong><pre><code>- Wide Area Network : 通常跨接很大的物理范围，如一个国家</code></pre></li></ul><p><br></p><p><strong>网络分类 – 公网 &amp; 内网</strong></p><p>公网：上网的计算机得到的 IP 地址是 Internet 上的<strong>非保留地址</strong>，公网的计算机和 Internet 上的其他计算机可以<strong>随意相互访问</strong></p><h3 id="IP-地址"><a href="#IP-地址" class="headerlink" title="IP 地址"></a>IP 地址</h3><p>IP (Internet Protocol) : 网络之间互连的协议，即网络相互连接进行通信而设计的<strong>协议</strong></p><p>IP 地址类型 ： <font color="red"><b>公有地址、私有地址</b></font></p><p>1.0.0.0 - 255.255.255.255</p><ul><li><p>公有地址(Public address)</p><ul><li>公有地址由 <strong>Inter NIC (Internet Network Information Center 因特网信息中心)</strong>负责。这些 IP 地址分配给注册并向 Inter NIC 提出申请的组织机构(免费)，可以通过它直接访问因特网</li></ul></li><li><p>私有地址(Private address)</p><ul><li>私有地址属于 <font color="red"><b>非注册地址</b></font>，专门为组织机构内部使用，用以分散使用</li></ul></li></ul><table><thead><tr><th>类别</th><th>私有 IP 地址</th><th>使用对象</th><th>最大主机数</th><th>最大网络数</th></tr></thead><tbody><tr><td>A 类</td><td>10.0.0.0 - 10.255.255.255</td><td>电信、联通等运营商</td><td>16777214</td><td>126 (2^7-2)</td></tr><tr><td>B 类</td><td>172.16.0.0 - 172.31.255.255</td><td></td><td>65534</td><td>16384(2^14)</td></tr><tr><td>C 类</td><td>192.168.0.0 - 192.168.255.255</td><td>使用最多</td><td>254</td><td>2097152(2^21)</td></tr></tbody></table><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a><strong>DNS</strong></h3><p>DNS (Domin Name System 域名系统) ： 因特网上作为域名和 IP 地址相互映射的一个分布式数据库，能使用户更方便的访问互联网</p><p><strong>域名解析</strong></p><blockquote><p>用户通过主机名，最终得到该主机名对应的 IP 地址的过程</p></blockquote><p><strong>步骤：</strong></p><p><strong>用户输入域名 localhost –&gt; DNS (localhost 127.0.0.1) –&gt; 服务器电脑</strong></p><h3 id="端口-Port"><a href="#端口-Port" class="headerlink" title="端口(Port)"></a>端口(Port)</h3><blockquote><p>端口可以认为是设备与外界通讯交流的出口</p></blockquote><p>端口: <font color="red"><b>虚拟端口</b></font> 和 <font color="red"><b>物理端口</b></font></p><p><strong>虚拟端口</strong> ： 计算机内部或者交换机路由器内的端口，不可见端口</p><p><strong>物理端口</strong> ： 如计算机的 80端口、 21端口等，可见端口例如 计算机背板的 RJ45网口</p><p><br></p><p>**用户输入域名 localhost：端口 –&gt; DNS (localhost 127.0.0.1) –&gt; 服务器电脑 –&gt; 软件（服务）</p><h2 id=""><a href="#" class="headerlink" title="**"></a>**</h2><h3 id="文件与用户的关系"><a href="#文件与用户的关系" class="headerlink" title="文件与用户的关系"></a>文件与用户的关系</h3><ul><li>所有者 u : 只有一个，但可以交换</li><li>用户组 g ： 只有一个，可以使用文件，但不是所有者</li><li>其他人 o ： 既不属于所有者，又不是用户组</li></ul><p><strong>格式</strong></p><ul><li><code>-</code>： 表示文件</li><li><code>d</code>： 表示目录</li><li><code>l</code> :  表示软连接<ul><li>例子 ：rw- r– r–<ul><li>rw- : 代表文件的所有者有读写的权限，代表最高权限，不一定需要赋予所有权限，够用就行</li><li>r– : 代表赋予用户组的权限</li><li>— : 代表赋予其他人的权限</li></ul></li></ul></li></ul><ul><li>软链接<ul><li>类似 Windows快捷方式，不决定原文件的权限，只是符号链接</li><li>三种用户都有所有权限 rwx  ， 文件为 l 开头 ，文件大小较小</li></ul></li><li>硬链接<ul><li>相当于拷贝 cp -p（保留属性）  + 同步更新  一个i节点对应到了两个文件</li><li>注意 ： 硬链接不能跨分区 ，而且不能针对目录使用<h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><ul><li>r(读)  w(写)  x(执行)</li></ul></li></ul></li></ul><ul><li>文件覆盖 y</li></ul><hr><h2 id="Linux配置"><a href="#Linux配置" class="headerlink" title="Linux配置"></a>Linux配置</h2><h3 id="设置Linux的IP地址"><a href="#设置Linux的IP地址" class="headerlink" title="设置Linux的IP地址"></a>设置Linux的IP地址</h3><p><code>ifconfig eth0 ip地址</code></p><ul><li>添加虚拟网卡<ul><li><code>ifconfig eth0:1 198.168.1.1</code></li></ul></li></ul><h3 id="操作技巧"><a href="#操作技巧" class="headerlink" title="操作技巧"></a>操作技巧</h3><ul><li><code>文件部分名称</code>+ tab  ： 自动补全文件名</li><li><code>Ctrl shift =</code> : 放大终端窗口的字体显示</li><li><code>Ctrl -</code> : 缩小终端窗口的字体显示</li><li>向上/下箭头:查看历史输入命令</li></ul><hr><h2 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h2><h3 id="查阅命令帮助信息"><a href="#查阅命令帮助信息" class="headerlink" title="查阅命令帮助信息"></a>查阅命令帮助信息</h3><p><code>help:command --help</code> : 显示帮助信息<br><code>man:man command</code> : 查阅使用手册</p><ul><li>空格:显示手册下一屏</li><li>Enter:下一行</li><li>b:回滚一屏</li><li>f:前滚一瓶</li><li>q:退出</li><li><p>/word:搜索word字符串</p></li><li><p>命令格式</p><ul><li>命令 -选项 -参数<ul><li>例子 ： ls -la /etc<br>命令的选项可以同时使用，且不分顺序</li></ul></li></ul></li></ul><h3 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h3><table><thead><tr><th>文件命令</th><th>作用</th><th>英文</th></tr></thead><tbody><tr><td>ls</td><td>目录处理命令</td><td>list</td></tr><tr><td>ls -a</td><td>查看目录所有文件（含隐藏文件） 可以添加目录参数</td><td></td></tr><tr><td>ls   -l</td><td>查看文件的详细信息</td><td></td></tr><tr><td>ls -lh</td><td>人性化显示文件信息,更直观显示文件大小</td><td></td></tr><tr><td>ls -ld /etc</td><td>只示目录本身的信息</td><td></td></tr><tr><td>ls -i</td><td>查看文件的i节点 （即为文件的id信息）</td></tr></tbody></table><p><b><font color="orange">说明</font></b></p><ul><li>.开头为隐藏文件,需要-a参数查看或者Ubuntu进入目录，按<code>ctrl h</code>就能看见以点号开头的隐藏文件</li><li>.当前目录</li><li>..上一级目录</li></ul><table><thead><tr><th>目录命令</th><th>英文</th><th>作用</th></tr></thead><tbody><tr><td>mkdir</td><td>make directories</td><td>创建新目录</td></tr><tr><td>mkdir -p</td><td></td><td>递归创建新目录，并且在新目录在再进行创建，可同时创建多个</td></tr><tr><td>cd</td><td>change directories</td><td>切换目录 . 代表当前目录 ..回到上一级目录</td></tr><tr><td>pwd</td><td>print working directories</td><td>显示当前工作目录</td></tr><tr><td>rmdir</td><td>remove directories</td><td>删除空目录</td></tr><tr><td>cp</td><td>copy</td><td>拷贝目录或文件 cp -rp [原文件或目录] [目标目录] r为复制目录操作 p为保留文件属性 可以同时复制多个</td></tr><tr><td>mv</td><td>move</td><td>目录剪切 移动  mv [绝对路径] [目标路径]  若是要剪切当前路径下的文件 可以直接 mv [文件名] [目标目录]</td></tr><tr><td>rm</td><td>remove</td><td>删除文件或名录 <strong>要慎重</strong>  rm -f 强制删除 rm -r 删除目录 rm -rf 直接删除目录</td></tr></tbody></table><table><thead><tr><th>cd 补充</th><th>作用</th></tr></thead><tbody><tr><td>cd ~</td><td>切换到当前用户的主目录</td></tr><tr><td>cd .</td><td>保持在当前目录不变</td></tr><tr><td>cd ..</td><td>切换到上级目录</td></tr><tr><td>cd -</td><td>可以在最近两次工作目录之间来回切换</td></tr></tbody></table><table><thead><tr><th>文件处理</th><th>作用</th><th>例子</th></tr></thead><tbody><tr><td>touch</td><td>创建空文件</td><td>touch /root/book.list</td></tr><tr><td>cat</td><td>浏览文件内容 可以加 -n 参数</td><td>cat -n /etc/issue</td></tr><tr><td>tac</td><td>cat 的倒序显示可以倒序显示文件内容</td><td></td></tr><tr><td>more</td><td>分页显示文件，适合查看长文件</td><td></td></tr><tr><td>less</td><td>分页浏览</td><td></td></tr><tr><td>head</td><td>查看文件的前n行,默认为10行</td><td>head -n 8</td></tr><tr><td>tail</td><td>查看文件的末尾n行</td><td>tail -f /var/log/message  动态显示问文件</td></tr></tbody></table><table><thead><tr><th>链接处理</th><th>作用</th><th>例子</th></tr></thead><tbody><tr><td>ln  /etc/issue /tmp</td><td>默认创建硬链接</td><td>ln -s 软连接</td></tr></tbody></table><hr><ul><li>注意事项:<ul><li><code>touch</code><ul><li>若要创建带空格文件名的文件，可<code>touch &quot;my love&quot;</code>,即加上双引号</li><li>最好不要在Linux中创建带有特殊符号的文件名</li></ul></li><li><code>cat</code><ul><li>不太适合浏览含有非常多内容的文件</li></ul></li><li><code>more</code><ul><li>按 空格 ： 一页一页浏览</li><li>按 回车 ： 一行一行浏览</li><li>按 q : 退出浏览</li></ul></li><li><code>cp</code><ul><li><code>cp -p</code> : 该属性可以保持复制文件或目录的信息，如创建和修改的时间等 cp -r </li><li><code>cp -r</code> : 可以在复制文件或目录时，将文件名进行修改 </li></ul></li><li><code>mv</code><ul><li>mv 当前目录下的文件名  要修改成的名字 : 可以作为文件名修改命令</li></ul></li><li><code>less</code> <ul><li>可以倒回去浏览内容</li><li>pageup : 一页一页往回翻</li><li>上箭头 : 一行一行往回翻</li><li>/service ： / 斜杠可以用来搜索，按 n 可以翻看下一页</li></ul></li></ul></li></ul><hr><h3 id="权限管理命令"><a href="#权限管理命令" class="headerlink" title="权限管理命令"></a>权限管理命令</h3><h3 id="命令名称：-chmod"><a href="#命令名称：-chmod" class="headerlink" title="命令名称： chmod"></a><strong>命令名称</strong>： chmod</h3><ul><li>命令原意： change the permissions mode of a file</li><li>所在路径： /bin/chmod</li><li>功能描述： 改变文件或目录权限</li><li>可以更改权限的对象： root &amp; 所有者</li></ul><ul><li><p><strong>语法</strong></p><ul><li>chmod [{ugoa}{+-=}{rwx}] [文件或目录]<pre><code>[mode=421] [文件或目录]-R 递归修改</code></pre><ul><li>例子 ： <code>chmod u+x myblog.md</code> – 给所有者(u)赋予myblog文件的<strong>写(x)</strong>的权限</li><li>补充 ： 通过”+-=”来修改权限 <ul><li>一般通过权限的数字来表示： r–4 w–2 x–1 </li><li>rwx : 7 ; rw- : 6 ;  r–: 4</li><li>例子 ： <code>chmod 640 myblog.md</code></li></ul></li><li>注意： chmod 默认改变当前指定的文件或目录，对目录下的子目录不进行修改<ul><li>若需要修改，则可以添加<code>-R</code>属性</li></ul></li></ul></li></ul></li><li><p>正确理解<strong>目录rwx</strong>权限</p></li></ul><p><img src="http://chuantu.biz/t6/336/1530283995x-1404764882.png" alt="img">       </p><p><b><font color="orange">注意</font></b>：r+x 权限是同时出现的</p><blockquote><p><strong>w权限的说明：</strong></p></blockquote><blockquote><p>对文件的删除是否能进行，是与用户在该文件所在目录被赋予的权限有关</p></blockquote><blockquote><p>若用户被给予W权限，则可以删除该文件</p></blockquote><h3 id="改变所有者命令-chown"><a href="#改变所有者命令-chown" class="headerlink" title="改变所有者命令 chown"></a>改变所有者命令 chown</h3><ul><li>命令名称 ： chown – change file ownership</li><li>命令所在路径 : /bin/chown</li><li>执行权限 ： <strong>root用户</strong></li><li>功能描述 ： 改变文件或目录的所有者</li></ul><p><br></p><ul><li><strong>语法</strong><pre><code>- 基本语法  : chown [用户][文件或目录]</code></pre></li></ul><p><br></p><ul><li><strong>注意事项</strong><blockquote><p>只有root管理员身份才能修改所有者</p><p>修改所有者时，要确保新所有者用户存在</p><p>创建新用户 <code>useradd 用户名</code> ,并且谁创建的文件，谁就是所有者</p></blockquote></li></ul><h3 id="改变文件所有组-chgrp"><a href="#改变文件所有组-chgrp" class="headerlink" title="改变文件所有组 chgrp"></a>改变文件所有组 chgrp</h3><ul><li>命令名称 ： chgrp – change file group ownership</li><li>命令所在路径 ： /bin/chgrp</li><li>执行权限 ： 所有用户</li></ul><p><br></p><ul><li><strong>语法</strong><ul><li>基本语法 ： chgrp [用户组][文件或目录]</li><li>范例 : <code>$ chgrp newgroup doc</code>  : 将doc文件的所属组改为newgroup</li><li>创建新组 ： <code>groupadd 新组名</code></li></ul></li></ul><h3 id="设置新建文件的缺省权限-umask"><a href="#设置新建文件的缺省权限-umask" class="headerlink" title="设置新建文件的缺省权限 umask"></a>设置新建文件的缺省权限 umask</h3><ul><li>命令名称 ： umask – the user file-creation mask</li><li>命令所在路径 ： Shell内置命令</li><li>执行权限 ： 所有用户</li><li>功能描述 ： 显示、设置文件的缺省权限</li></ul><p><br></p><ul><li><strong>语法</strong><ul><li>基本语法 ： umask [-S]<ul><li>S : <strong>以 rwx 形式显示新建文件的缺省权限</strong></li><li>范例 ： <code>$ uamsk -S</code></li></ul></li></ul><ul><li>拓展语法 <ul><li><code>umask 023</code> </li><li>含义 ：所有权限777 ,将 777 - 023 = 754 ,则为新设置的目录权限为 <strong>rwx–rx–r</strong>  </li></ul></li></ul></li></ul><ul><li>注意 <ul><li>touch 创建新文件是不具有<strong>可执行权限</strong>的</li></ul></li></ul><hr><h2 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h2><h3 id="文件搜索命令-find"><a href="#文件搜索命令-find" class="headerlink" title="文件搜索命令 find"></a>文件搜索命令 find</h3><ul><li>命令名称： find  </li><li>命令所在路径： /bin/find</li><li><p>执行权限： 所有用户</p></li><li><p><strong>语法</strong></p><ul><li><strong>find [搜索范围][匹配条件]</strong></li><li><strong>更多用法</strong><ul><li><code>$find /etc -name init</code> :使用-name 精准搜索<ul><li>粗略搜索 <code>*init*</code></li><li>不分文件名大小写 <code>-iname</code></li><li><ul><li>：匹配任意字符  ？：匹配单个字符</li></ul></li></ul></li></ul><ul><li><code>$find / -size</code> : 使用-size 根据文件大小来查找<ul><li><code>find / -size +204800</code> : 在根目录下查找大于100MB的文件</li><li><strong> +n 大于 -n 小于 n 等于</strong></li><li>大小说明<ul><li>1K = 2数据块  1数据块 = 512字节 = 0.5K</li></ul></li></ul></li><li><code>$find /home -user（-group） yonghu</code> ：根据文件所有者(所属组)来查找</li><li><code>find -type f</code> :根据<strong>文件类型</strong>查找 – f 文件  d 目录  l 软连接文件</li><li><code>find -inum</code> : 根据<strong>i节点</strong>查找 ，通过i节点，可删除特殊文件</li><li><strong>根据文件信息修改的时间来查找</strong><ul><li><code>$find /etc -amin -5</code>:查找5分钟内被<strong>访问</strong>过的文件和目录  – <strong>access</strong></li><li><code>$find /etc -cmin -5</code>:查找5分钟内被修改过<strong>属性</strong>的文件或目录  – <strong>change</strong></li><li><code>$find /etc -mmin -5</code>:查找5分钟内被修改过<strong>内容</strong>的文件或目录  – <strong>modify</strong><br><br></li></ul></li></ul></li></ul></li></ul><table><thead><tr><th>常用连接选项</th><th>作用</th><th>范例</th></tr></thead><tbody><tr><td>-a (and)</td><td>表示两个条件同时满足</td><td><code>$find /etc +163840 -a -size -204800</code></td></tr><tr><td>-o (or)</td><td>表示两个条件满足任意一个即可</td><td><code>$find /etc 163840 -o -size 204800</code></td></tr></tbody></table><p><br></p><font color="orange">注意事项</font><ul><li>查找文件时，文件名的大小写是区分开来的</li></ul><hr><h3 id="文件搜索命令-locate"><a href="#文件搜索命令-locate" class="headerlink" title="文件搜索命令 locate"></a>文件搜索命令 locate</h3><ul><li>命令名称： locate</li><li>命令所在路径： /usr/bin/locate</li><li>执行权限 ： 所有用户</li></ul><p><strong>语法</strong></p><ul><li><p>基本语法 </p><ul><li>locate 文件名</li><li>功能 ： 在<strong>文件资料库中</strong>查找文件</li><li>范例：<code>$locate init</code></li><li>文件库： <code>/var/lib/mlocate/mlocate.db</code></li></ul></li><li><p>拓展语法</p><ul><li><code>locate -i 文件名</code> : 不区分大小写来查找文件</li></ul></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote><p>当创建的文件没有被存入文件资料库中时，无法使用locate查找到文件</p></blockquote><p>解决方法： <code>$ updatedb</code> 手动更新</p><blockquote><p>文件资料库不会收取 /tmp 临时文件夹下的文件，故使用locate可能无法搜索到该目录下文件</p></blockquote><h3 id="文件搜索命令-which"><a href="#文件搜索命令-which" class="headerlink" title="文件搜索命令 which"></a>文件搜索命令 which</h3><ul><li>命令名称： which</li><li>命令所在路径 ： /usr/bin/which</li><li>执行权限 ： 所有用户</li><li>功能描述： 搜索<strong>命令</strong>所在目录及别名信息</li><li>例子 ： <code>$ which ls</code></li></ul><h3 id="文件搜索命令-whereis"><a href="#文件搜索命令-whereis" class="headerlink" title="文件搜索命令 whereis"></a>文件搜索命令 whereis</h3><ul><li>命令名称: whereis</li><li>命令所在路径： /usr/bin/whereis</li><li>执行权限 ： 所有用户</li><li>功能描述： 搜索命令所在目录及帮助文档路径</li><li>例子：  <code>$ whereis ls</code></li></ul><h3 id="文件搜索命令-grep"><a href="#文件搜索命令-grep" class="headerlink" title="文件搜索命令 grep"></a>文件搜索命令 grep</h3><ul><li>命令名称 ： grep</li><li>命令所在路径： /bin/grep</li><li>执行权限: 所有用户</li><li>功能描述 : 在<strong>文件中</strong>搜寻<strong>字串匹配的行</strong>并输出，即在<strong>文件内</strong>进行搜索</li></ul><p><strong>语法</strong></p><ul><li><p>基本语法</p><ul><li><code>$ grep mysql /root/install.log</code></li><li>$ grep + 查找关键词 + 文件所在地址  </li></ul></li><li><p>拓展语法</p><ul><li><code>$ grep -i</code> : 不区分大小写来查找</li><li><code>$ grep -v</code> : 排除指定字串来查找</li><li><code>$ grep -v ^#</code> : 过滤掉位于行首的文件脚本注释行</li></ul></li></ul><hr><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="目录："><a href="#目录：" class="headerlink" title="目录："></a>目录：</h3><p><code>/proc/</code> <code>/sys/</code>  : 为系统内存和内核，只可读，写入的数据在重启时会清除，不要往内写入文件</p><p><code>/tmp</code> : 临时目录，存放临时文件，建议不要存放重要文件，重启时最好清除</p><p><code>/var</code> : 动态数据保存位置，注意保存缓存，日志已经软件运行产生的文件</p><p><code>/usr</code> : 系统软件资源目录，为“Unix Software Resource”的缩写，用于存放系统软件资源的目录，系统安装的软件资源基本存放在此目录</p><h3 id="服务器："><a href="#服务器：" class="headerlink" title="服务器："></a>服务器：</h3><ul><li>远程服务器<font color="orange"><b>不允许关机</b></font>，只能重启</li><li>重启时应该关闭服务</li><li>不要在服务器访问<strong>高峰</strong>运行<strong>高负载命令</strong> ，如对大数据的处理</li><li>远程配置防火墙（<strong>过滤作用</strong>）时，不要把自己踢出服务器</li></ul><h3 id="其他："><a href="#其他：" class="headerlink" title="其他："></a>其他：</h3><ul><li>指定合理的密码规范并定期更新</li><li>合理分配权限 – 用户的权限越少越好</li><li><strong>定期备份重要数据与日志</strong>，多处存储</li><li>Linux命令若未指定目录，则默认在当前目录里执行操作</li><li>Linux 新建的文件的 x(可执行)权限会自动去除</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LINUX-初探&quot;&gt;&lt;a href=&quot;#LINUX-初探&quot; class=&quot;headerlink&quot; title=&quot;LINUX 初探&quot;&gt;&lt;/a&gt;LINUX 初探&lt;/h1&gt;
    
    </summary>
    
      <category term="LINUX" scheme="http://yoursite.com/categories/LINUX/"/>
    
    
      <category term="Linux初阶" scheme="http://yoursite.com/tags/Linux%E5%88%9D%E9%98%B6/"/>
    
  </entry>
  
  <entry>
    <title>电音入门.md</title>
    <link href="http://yoursite.com/2018/06/28/%E7%94%B5%E9%9F%B3%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/06/28/电音入门/</id>
    <published>2018-06-28T14:11:50.000Z</published>
    <updated>2018-06-28T14:59:13.624Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一入电音深似海"><a href="#一入电音深似海" class="headerlink" title="一入电音深似海"></a>一入电音深似海</h1><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><blockquote><p>Can u feel the volume of my love for u</p></blockquote><a id="more"></a><h2 id="电音风格"><a href="#电音风格" class="headerlink" title="电音风格"></a>电音风格</h2><h3 id="Techno-–-高科技舞曲"><a href="#Techno-–-高科技舞曲" class="headerlink" title="Techno – 高科技舞曲"></a>Techno – 高科技舞曲</h3><ul><li>理解 ： 重复动次打次</li></ul><hr><h3 id="House-music-–舞蹈音乐"><a href="#House-music-–舞蹈音乐" class="headerlink" title="House music –舞蹈音乐"></a>House music –舞蹈音乐</h3><ul><li>场景 ： 各大酒吧</li><li>风格 ： 类似Techno, 但高潮部分，会突然爆发不同的旋律</li><li>辨别 <ul><li>4/4拍 动次动次   动 ： 大姑  次 ： 镲</li><li>BPM(beats per minutes) : 118-135bpm ,最常见的为 <strong>128bpm</strong></li></ul></li></ul><h4 id="Progressive-House"><a href="#Progressive-House" class="headerlink" title="Progressive House"></a>Progressive House</h4><ul><li>辨别 ： 一层一层的堆叠感  拍数不断堆叠</li><li>内容<ul><li>一定具有VOCAL(人声)，和弦等</li></ul></li></ul><h4 id="Electric-House"><a href="#Electric-House" class="headerlink" title="Electric House"></a>Electric House</h4><ul><li>辨别 ： 电子制作  人造的音色</li><li>内容<ul><li>与鼓点同步的Bass声音(sub) 类似 dong-en “咚-嗯”</li></ul></li></ul><h4 id="Big-Room-House"><a href="#Big-Room-House" class="headerlink" title="Big Room House"></a>Big Room House</h4><ul><li>辨别 ： <strong>单一洗脑</strong>  富有侵略性的旋律</li><li>内容<ul><li>一串串 “叭叭叭”的声音 类似喇叭的声音</li></ul></li></ul><h4 id="Melbourne-Bounce"><a href="#Melbourne-Bounce" class="headerlink" title="Melbourne Bounce"></a>Melbourne Bounce</h4><ul><li>辨别 : 慢摇  缩放感  发出”嗯-嘚”的声音 </li></ul><h4 id="Deep-House"><a href="#Deep-House" class="headerlink" title="Deep House"></a>Deep House</h4><ul><li>辨别 ： 结构稳定</li><li>情绪起伏小 速度较慢 120bpm</li></ul><h4 id="Tropical-House"><a href="#Tropical-House" class="headerlink" title="Tropical  House"></a>Tropical  House</h4><ul><li>辨别 : 热带感的乐器、音色 有种令人想跳舞的感觉</li></ul><h4 id="Future-House"><a href="#Future-House" class="headerlink" title="Future House"></a>Future House</h4><ul><li>辨别 ： 常以 bassline 主旋律 有点空空的感觉 由一条bass的主旋律</li></ul><h4 id="Tech-House"><a href="#Tech-House" class="headerlink" title="Tech House"></a>Tech House</h4><ul><li>辨别 ： 碎拍、旋律不明确 打击乐特别多 次次次的声音特别多</li><li><code>Techno &amp; House</code></li></ul><hr><h3 id="Dubstep"><a href="#Dubstep" class="headerlink" title="Dubstep"></a>Dubstep</h3><ul><li>风格 ： 偏向黑暗系， 嗡嗡嘭嘭感十足</li></ul><hr><h3 id="Trap"><a href="#Trap" class="headerlink" title="Trap"></a>Trap</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一入电音深似海&quot;&gt;&lt;a href=&quot;#一入电音深似海&quot; class=&quot;headerlink&quot; title=&quot;一入电音深似海&quot;&gt;&lt;/a&gt;一入电音深似海&lt;/h1&gt;&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Can u feel the volume of my love for u&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="How to become a DJ" scheme="http://yoursite.com/categories/How-to-become-a-DJ/"/>
    
    
      <category term="Music" scheme="http://yoursite.com/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>乐理知识.md</title>
    <link href="http://yoursite.com/2018/06/28/%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2018/06/28/乐理知识/</id>
    <published>2018-06-28T14:11:50.000Z</published>
    <updated>2018-07-17T13:45:28.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="乐理入门"><a href="#乐理入门" class="headerlink" title="乐理入门"></a>乐理入门</h1><a id="more"></a><h2 id="泛音"><a href="#泛音" class="headerlink" title="泛音"></a>泛音</h2><ul><li>概念：物体局部振动产生的<b><font color="orange">复合音</font></b>的总和<ul><li>以弦的振动来说，除了整个弦的振动，其二分之一，三分之一…各段都在振动，共同发音</li></ul></li><li>作用：对<b><font color="orange">音色</font></b>具有决定性的作用，通过增减泛音的音量，可对音色有明显的改变</li></ul><h2 id="音阶"><a href="#音阶" class="headerlink" title="音阶"></a>音阶</h2><ul><li>什么是音阶</li></ul><p>调式中由高低次序（上下行），由主音到主音排列起来</p><h2 id="音级"><a href="#音级" class="headerlink" title="音级"></a>音级</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>乐音体系中的各个音，例如钢琴有88个不同音高的音，则音级为88</p><h3 id="基本音级"><a href="#基本音级" class="headerlink" title="基本音级"></a>基本音级</h3><ul><li>从 <strong>do–si</strong>  七个独立音叫做基本音级，并通过字母或唱名标记<ul><li>钢琴白键便是7个基本音级的循环重复    <ul><li>Do Re Mi Fa Sol La S 对应 C D E F G A B<ul><li>两个相邻具有相同名称的音级叫做<strong>八度</strong>,    即相差一个<strong>八度</strong>，一个八度音阶共有7个基本音级和5个变化音级，共12个音组成（12平均音）</li></ul></li></ul></li></ul></li></ul><h3 id="变化音级"><a href="#变化音级" class="headerlink" title="变化音级"></a>变化音级</h3><p>升高或者降低基本音级而获得的音，钢琴中用黑键表示</p><h4 id="变化音级标注法"><a href="#变化音级标注法" class="headerlink" title="变化音级标注法"></a>变化音级标注法</h4><ol><li>升  or  “#”</li><li>降  or  “b”</li><li>重升  or  “x”</li><li>重降  or  “bb”</li></ol><blockquote><p>其中音高相同而意义和记法不同的音叫做“等音” ，如#C , bD</p></blockquote><hr><h2 id="乐音分组"><a href="#乐音分组" class="headerlink" title="乐音分组"></a>乐音分组</h2><p>目的<br>: 由于乐音体系中音级会<strong>循环出现</strong>，于是为了区分<strong>音名相同而音高不同</strong>，将其分组</p><p><img src="https://images2015.cnblogs.com/blog/436944/201703/436944-20170306010628797-200752065.png" alt="image"></p><p>以钢琴为例，最中央的12个音级叫做<strong>小字一组</strong></p><hr><h2 id="音域及音区"><a href="#音域及音区" class="headerlink" title="音域及音区"></a>音域及音区</h2><h3 id="总音域"><a href="#总音域" class="headerlink" title="总音域"></a>总音域</h3><p>概念<br>: 指音列的总范围，乐器和人声的音域指能发生出的<strong>最高或最低音</strong>的<strong>范围</strong></p><blockquote><p>不同音区表现不同的音色/情感等特征</p></blockquote><hr><h2 id="五线谱"><a href="#五线谱" class="headerlink" title="五线谱"></a>五线谱</h2><p><img src="https://upload.wikimedia.org/wikipedia/commons/9/91/Tonyli1212Music.jpg" alt="img"></p><p><strong>概念</strong><br>: 通用的标准记谱法，由五条平行横线构成</p><pre><code>音符通过在五线谱中记录在线上或间内</code></pre><p><strong>作用</strong><br>: 音符位置决定音的高低，形状决定音的长短</p><p><strong>注意</strong><br>: 当五<strong>线不足以记录时，通过</strong>上加或下加线** 来解决</p><p> 五线谱由<strong>自下而上</strong>计算，音高也由<strong>自下而上由低到高</strong></p><h3 id="多声部五线谱"><a href="#多声部五线谱" class="headerlink" title="多声部五线谱"></a>多声部五线谱</h3><blockquote><p>多声部需要数行五线谱来记录，需要使用连谱号连接</p></blockquote><p><strong>连谱号</strong><br>: 包括起线（连接数行五线谱的垂直线）和括线（连接数行五线谱的括弧）</p><blockquote><p>在总谱中，使用小节线连接同种类型的乐器<br>连谱号括弧</p></blockquote><ul><li>花线<ul><li>钢琴/风琴/手风琴/竖琴</li></ul></li><li>直线<ul><li>合奏/合唱乐队</li><li>有时在直线外还会加上辅助括线，</li></ul></li><li>起线<ul><li>位置在五线谱的开端，需连接全部的五线谱</li></ul></li></ul><h3 id="音符"><a href="#音符" class="headerlink" title="音符"></a>音符</h3><p>概念<br>: 记录不同长短的音的进行的符号</p><p>成分<br>: 符头/符干/符尾</p><h3 id="休止符"><a href="#休止符" class="headerlink" title="休止符"></a>休止符</h3><p>休止符<br>: 记录音的间断的符号</p><p>持续时间<br>: 每个音符的持续时间为倍数减少，如二分音符持续2S.则四分音符持续1S</p><p>附点<br>: 记在音符符头或者休止符右边的小圆点，表示增长原有音符或休止符时值得一半，且每增加一个附点，则增长时间为前一个附点值得一半</p><hr><h2 id="音符记谱"><a href="#音符记谱" class="headerlink" title="音符记谱"></a>音符记谱</h2><ul><li>音符记录在五线谱的线或间上，符头越高，音高越高</li><li>五线谱音线有1-5，从下到上</li></ul><h3 id="符头方向判断"><a href="#符头方向判断" class="headerlink" title="符头方向判断"></a>符头方向判断</h3><ul><li>符头在三线以上，符干朝下，附在符头左边</li><li>符头在三线以下，符干朝下，附在符头右边</li><li>符头在三线上，则符干可上可下，符干方向随附近音符方向决定</li></ul><h3 id="符干"><a href="#符干" class="headerlink" title="符干"></a>符干</h3><ul><li>单声部永远使用单符干记谱（独立记谱）</li><li>多声部只有在节奏相同时，才用单符干记谱，如“三十二音符”</li></ul><h3 id="符尾"><a href="#符尾" class="headerlink" title="符尾"></a>符尾</h3><ul><li>符尾在符干右边并且向符头方向弯曲</li></ul><h3 id="一符干-多音"><a href="#一符干-多音" class="headerlink" title="一符干 多音"></a>一符干 多音</h3><ul><li>同时连接多个音，表示这些音需要同时弹奏</li><li>同一符干连接多个音，符干方向以离第三线最远的音符为标准记录，且符尾方向相同</li></ul><hr><h1 id="简谱与五线谱"><a href="#简谱与五线谱" class="headerlink" title="简谱与五线谱"></a>简谱与五线谱</h1><h2 id="大音阶"><a href="#大音阶" class="headerlink" title="大音阶"></a>大音阶</h2><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1531833942802&amp;di=ff55fb100ef85cdcd74e4171ab51b6f2&amp;imgtype=0&amp;src=http%3A%2F%2Fphotocdn.sohu.com%2F20150717%2Fmp23236911_1437147140334_2.jpeg" alt="img"></p><p>对应手指 大拇指-小拇指 ： 1-2-3-4-5</p><p><strong>C大调 ： 1-2-3-1-2-3-4-5</strong></p><p>C 位于 下加一线</p><p><strong>G大调</strong></p><p>C 位于 第二线 </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;乐理入门&quot;&gt;&lt;a href=&quot;#乐理入门&quot; class=&quot;headerlink&quot; title=&quot;乐理入门&quot;&gt;&lt;/a&gt;乐理入门&lt;/h1&gt;
    
    </summary>
    
      <category term="How to become a DJ" scheme="http://yoursite.com/categories/How-to-become-a-DJ/"/>
    
    
      <category term="Music" scheme="http://yoursite.com/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>多进程初探</title>
    <link href="http://yoursite.com/2018/06/26/%E5%A4%9A%E8%BF%9B%E7%A8%8B&amp;%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/06/26/多进程&amp;多线程/</id>
    <published>2018-06-26T13:41:32.000Z</published>
    <updated>2018-06-26T13:54:36.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搞定多进程与多线程"><a href="#搞定多进程与多线程" class="headerlink" title="搞定多进程与多线程"></a>搞定多进程与多线程</h1><a id="more"></a><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>程序<br>: 代码以文本的形式存入一个文档</p><p>进程<br>: 程序运行的一个状态，包含地址空间、内存、数据栈等<br>  每个进程由自己==完全独立==的运行环境，多进程共享数据</p><p>轻量化的进程</p><ul><li>一个进程的多个线程间共享数据和上下文运行环境</li><li>共享、互斥问题</li></ul><p>线程<br>: 一个进程的独立运行片段，一个进程可以由多个线程</p><p>全局解释器锁(GIL)</p><ul><li>Python代码的执行是由python虚拟机进行控制</li><li>在主循环中有一个控制线程在执行</li></ul><hr><h3 id="Python包"><a href="#Python包" class="headerlink" title="Python包"></a>Python包</h3><h4 id="thread：-有问题，不好用"><a href="#thread：-有问题，不好用" class="headerlink" title="thread： 有问题，不好用"></a>thread： 有问题，不好用</h4><ul><li>python3： _thread<pre><code>*  `import _thread as thread ` </code></pre><h4 id="threading-通行的包"><a href="#threading-通行的包" class="headerlink" title="threading: 通行的包"></a>threading: 通行的包</h4></li><li>直接利用<code>threading.Thread</code>生成Thread</li><li><code>t = threading.Thread(target=xxx, args=())</code></li><li><code>t.start()</code>: 启动多线程,<strong>可独立于主线程</strong></li><li><code>t.join()</code> : 等待多线程执行完成</li></ul><h4 id="守护线程-daemon"><a href="#守护线程-daemon" class="headerlink" title="守护线程 daemon"></a>守护线程 daemon</h4><p>子线程会在主线程结束后自动退出**，一般认为守护线程不重要或不允许离开主线程独立运行</p><ul><li>设置守护线程–在<code>t.start()</code>前<pre><code>* `t.setDaemon(True)`</code></pre></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span></span><br><span class="line">    main()</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><h3 id="启动线程–使用多线程执行某个函数"><a href="#启动线程–使用多线程执行某个函数" class="headerlink" title="启动线程–使用多线程执行某个函数"></a>启动线程–使用多线程执行某个函数</h3><p><code>thread.start_new_thread(loop,()</code></p><p>理解启动多线程<br>: 相当于给多个工人分配任务，自己可以做别的事情，等自己事情做完了，工人也恰好完工（完成时间非常快）</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>启动多线程函数为 ==start_new_thread==</li><li>参数为两个，一个是运行的==函数名==，另一个是==函数参数==作为元组使用，若为空，则使用空元组，若函数只有一个参数，则在参数后需要一个==逗号==，标识为元组<br>启动多线程</li><li>==一定要使用while语句==，因为启动多线程后本程序就作为主线程存在，如果主线程执行完毕，则子线程可能也会没执行完就终止</li></ol><h3 id="共享变量"><a href="#共享变量" class="headerlink" title="共享变量"></a>共享变量</h3><p>共享变量<br>: 当多个线程同时访问一个相同变量时，会产生共享变量问题,即会产生冲突</p><h3 id="解决变量"><a href="#解决变量" class="headerlink" title="解决变量"></a>解决变量</h3><h3 id="锁-Lock"><a href="#锁-Lock" class="headerlink" title="锁(Lock)"></a>锁(Lock)</h3><p>锁<br>: 是一个标志，表示<strong>一个线程在占用一些资源</strong></p><h5 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h5><ol><li>上锁</li><li>可以放心使用共享资源</li><li>取消锁，释放锁</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">lock = threading.Lock()</span><br><span class="line"><span class="comment"># 上锁，申请锁</span></span><br><span class="line">lock.acquire()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用结束后，释放锁</span></span><br><span class="line">lock.release()</span><br></pre></td></tr></table></figure><h3 id="线程安全问题"><a href="#线程安全问题" class="headerlink" title="线程安全问题"></a>线程安全问题</h3><p>概念<br>: 如果一个资源/变量，对于多线程来说，不用加锁也不会引起任何问题，则称为线程安全</p><p>类型</p><ol><li>线程安全变量： queue</li><li>线程不安全变量： list 、 set 、 dict </li></ol><h3 id="生产者消费问题"><a href="#生产者消费问题" class="headerlink" title="生产者消费问题"></a>生产者消费问题</h3><blockquote><p>一个模型，可以用来搭建消息队列</p></blockquote><p>queue<br>: 一个用来存放变量的数据结构，特点为先进先出，内部元素排队，可以理解为一个特殊的<strong>list</strong></p><p><strong>方法</strong></p><ul><li>queue.Queue() : 生成队列的实例</li><li>queue.qsize() : 计算队列的长度</li><li>queue.push() : 将数据放入队列中</li><li>queue.get()  : 从queue中取出一个值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">from</span> Queue <span class="keyword">import</span> Queue</span><br><span class="line"></span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line"><span class="keyword">import</span> queue</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接继承Thread方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Producer</span><span class="params">(threading.Thread)</span>    </span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> queue</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            <span class="comment"># qsize计算队列的长度</span></span><br><span class="line">            <span class="keyword">if</span> queue.qsize() &lt; <span class="number">1000</span>    </span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">                    count = count + <span class="number">1</span></span><br><span class="line">                    msg = <span class="string">"生产产品"</span> + str(count)</span><br><span class="line">                    <span class="comment"># 将数据放入队列中</span></span><br><span class="line">                    queue.put(msg)     </span><br><span class="line">                    print(msg)</span><br><span class="line">                time.sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span><span class="params">(threading.Thread)</span>    </span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">global</span> queue</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            <span class="keyword">if</span> queue.qsize() &gt; <span class="number">100</span>    </span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                    <span class="comment"># get是从queue中取出一个值</span></span><br><span class="line">                    msg = self.name + <span class="string">"消费了"</span> + queue.get()</span><br><span class="line">                    print(msg)</span><br><span class="line">                time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>解释<br>: 对于继承<code>Thread</code>,必须重写<code>run(self)</code>函数，<code>run(self)</code>函数为调用<code>Thread</code>时，自动调用的函数</p><hr><h3 id="死锁现象"><a href="#死锁现象" class="headerlink" title="死锁现象"></a>死锁现象</h3><h4 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h4><p> 集合中的每一个进程都在等待只能由本集合中的其他进程才能引发的事件，那么该组进程是死锁的</p><blockquote><p>例如，如果线程A锁住了记录1并等待记录2，而线程B锁住了记录2并等待记录1，这样两个线程就发生了死锁现象。</p></blockquote><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><ol><li><p>对申请锁的内容设置超时时间</p><ul><li><code>lock.acquire(timeout=2)</code></li></ul></li><li><p><strong>semaphore</strong></p><ul><li>允许一个资源最多由几个多线程同时使用<ul><li><code>semaphore = threading.Semaphore(3)</code> : 设置最多3个线程同时使用资源</li></ul></li></ul></li></ol><ol start="3"><li>可重入锁<ul><li><code>lock = threading.RLock()</code></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搞定多进程与多线程&quot;&gt;&lt;a href=&quot;#搞定多进程与多线程&quot; class=&quot;headerlink&quot; title=&quot;搞定多进程与多线程&quot;&gt;&lt;/a&gt;搞定多进程与多线程&lt;/h1&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>前端深似海-HTML</title>
    <link href="http://yoursite.com/2018/06/24/HTML/"/>
    <id>http://yoursite.com/2018/06/24/HTML/</id>
    <published>2018-06-24T14:27:16.000Z</published>
    <updated>2018-07-20T02:03:05.136Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逐步学会HTML"><a href="#逐步学会HTML" class="headerlink" title="逐步学会HTML"></a>逐步学会HTML</h1><a id="more"></a><hr><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><h3 id="统一资源定位符-URL"><a href="#统一资源定位符-URL" class="headerlink" title="统一资源定位符 URL"></a>统一资源定位符 URL</h3><blockquote><p>URL  Uniform Resource Locator</p></blockquote><h3 id="URL-格式"><a href="#URL-格式" class="headerlink" title="URL 格式"></a>URL 格式</h3><p><code>scheme://host.domain:port/path/filename</code></p><ul><li>scheme - 定义因特网服务的类型。最常见的类型是 http</li><li>host - 定义域主机（http 的默认主机是 www）</li><li>domain - 定义因特网域名，比如 w3school.com.cn</li><li>:port - 定义主机上的端口号（http 的默认端口号是 80）</li><li>path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。</li><li>filename - 定义文档/资源的名称</li></ul><h3 id="URL-编码"><a href="#URL-编码" class="headerlink" title="URL 编码"></a>URL 编码</h3><ul><li><p>URL 只能使用 <strong>ASCII 字符集</strong>来通过因特网进行发送。</p></li><li><p>由于 URL 常常会包含 ASCII 集合之外的字符，URL 必须转换为<strong>有效的 ASCII 格式</strong>。</p></li><li><p>URL 编码使用 <strong>“%”</strong> 其后跟随<strong>两位的十六进制数</strong>来替换非 ASCII 字符。</p></li><li><p>URL 不能包含空格。URL 编码通常使用 <strong>+</strong> 来替换空格。</p></li></ul><h3 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h3><p>文档类型定义(Document Type Definition)</p><blockquote><p>一套为了进行程序间的<strong>数据交换</strong>而建立的关于标记符的语法规则。<br>使用各类文档类型定义是为了让标准通用标记语言、可扩展标记语言文件能符合规定的数据交换标准.</p></blockquote><hr><h2 id="HTML-文档声明"><a href="#HTML-文档声明" class="headerlink" title="HTML 文档声明"></a>HTML 文档声明</h2><p><strong>&lt;HTML &lt;!DOCTYPE&gt;</strong></p><p><code>&lt;!DOCTYPE&gt;</code>声明帮助浏览器正确地显示网页</p><blockquote><p><code>&lt;!DOCTYPE&gt;</code> 不是 HTML 标签。它为浏览器提供一项信息（声明），即 HTML 是用什么版本编写的。</p></blockquote><p><code>&lt;!DOCTYPE html&gt;</code> : HTML5 的声明</p><hr><h2 id="HTML基础标签"><a href="#HTML基础标签" class="headerlink" title="HTML基础标签"></a>HTML基础标签</h2><ul><li>添加水平线<ul><li><code>&lt;hr/&gt;</code></li></ul></li><li>内容居中<ul><li><code>align=&quot;center&quot;</code></li></ul></li><li>换行<ul><li><code>&lt;br/&gt;</code></li></ul></li><li>注释<ul><li><code>&lt;!--   --&gt;</code></li></ul></li><li>背景颜色<ul><li><code>bgcolor=&quot;blue&quot;</code></li></ul></li><li>链接<ul><li><code>&lt;a href=&quot;http://&quot; &gt;</code></li></ul></li><li>图像<ul><li><code>&lt;img src=&quot;  &quot;&gt;</code></li></ul></li></ul><hr><h1 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h1><h2 id="HTML属性"><a href="#HTML属性" class="headerlink" title="HTML属性"></a>HTML属性</h2><ul><li><strong>style属性</strong><ul><li><code>background-color</code><ul><li>属性为元素定义了背景颜色</li><li>实例：<code>style=&quot;background-color:red&quot;</code></li></ul></li><li><code>font-family</code>、<code>color</code> 以及 <code>font-size</code><ul><li>属性分别定义元素中文本的字体系列、颜色和字体尺寸</li><li>实例：<code>style=&quot;font-family:arial;color:red;font-size:20px;&quot;</code></li></ul></li><li><code>text-align</code><ul><li>属性规定了元素中文本的水平对齐方式</li><li>实例：<code>style=&quot;text-align:center&quot;</code></li></ul></li><li><code>color</code><ul><li>设置字体颜色 ： <code>color: red</code></li><li>特殊用法 : <code>color: rgb(100,200,500);</code>  rgb: red green blue</li></ul></li><li><code>text-decoration</code><ul><li>设置文字修饰</li><li>例如 <ul><li><code>text-decoration: underline</code> – 设置下划线</li><li><code>text-decoration: none</code> –不设置任何文字修饰</li></ul></li></ul></li></ul></li></ul><hr><h2 id="HTML-颜色"><a href="#HTML-颜色" class="headerlink" title="HTML 颜色"></a>HTML 颜色</h2><blockquote><p>颜色由红色、绿色、蓝色混合而成。</p></blockquote><p><strong>颜色名：</strong>大多数的浏览器都支持颜色名集合。</p><font color="orange">提示：</font>仅仅有 16 种颜色名被 W3C 的 HTML4.0 标准所支持。它们是：aqua, black, blue, fuchsia, gray, green, lime, maroon, navy, olive, purple, red, silver, teal, white, yellow。<br><br>&gt; 如果需要使用其它的颜色，需要使用十六进制的颜色值。<br><br>—<br><br>## HTML中的样式 stylesheet<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>: red&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">color</span>: blue&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>: red&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span> &#123;<span class="attribute">margin-left</span>: <span class="number">20px</span>&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>&gt; 添加到部分的样式信息对 HTML 进行格式化<br><br>### HTML的内容格式化<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=gb2312"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Language"</span> <span class="attr">content</span>=<span class="string">"zh-cn"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>&gt; 当特殊的样式需要应用到个别元素时，就可以使用内联样式<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">p</span> style=<span class="string">"color: red; margin-left: 20px"</span>&gt;</span><br><span class="line">This is <span class="selector-tag">a</span> paragraph</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure><br><br>### 使用样式属性做一个没有下划线的链接<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/example/html/lastpage.html"</span> <span class="attr">style</span>=<span class="string">"text-decoration:none"</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><em> 自定义下划线链接<br><br><code>text-decoration: underline</code></em> <code>&lt;link&gt;</code> 标签链接到一个外部样式表<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"/html/css"</span>/&gt;</span></span><br></pre></td></tr></table></figure><br><br>### 设置HTML的aside侧栏的边距<br><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">aside</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br>例子<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrap"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>mytest<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>The cat was fast.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>content<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>mysidebar<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>about<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>contact<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrap</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><b><font color="red">注意：</font></b><br><em> 为显示aside的侧边效果，首先要对aside所在的div中，设置div的属性</em> 为使得页面更好的附和浏览器，可以设置宽度，高度为<strong>百分比</strong>，如<code>width: 80%</code><br><br><br>### 设置样式元素的展示方式<code>dispaly</code><br><br>| code | function  |<br>| —  | ——– |<br>| <code>display : inline</code> | 将样式元素在一条线上显示 |<br>| <code>display : block</code> | 将样式元素块显示 |<br><br><b><font color="brown">拓展</font></b><br><br><em> <code>:hover</code>     </em>  :hover 选择器鼠标指针在其上浮动的链接设置样式。<br>     <em>  hover 选择器可用于 <strong>所有元素</strong> ，不只是链接。<br><br>例：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: underline</span><br><span class="line">  color: <span class="number">#666</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></em> :link 选择器设置指向<font color="orange"><strong>未被访问页面的链接</strong></font>的样式<br><em> :visited 选择器用于设置指向<font color="orange"><strong>已被访问的页面的链接</strong></font></em> :active 选择器用于<font color="orange"><strong>活动链接</strong></font>。<br><br><b><font color="orange">注释：</font></b><br>在 CSS 定义中，<code>:hover</code> 必须位于 <code>:link</code> 和 <code>:visited</code> 之后（如果存在的话），这样样式才能生效。<br><br>—<br><br><br>—<br><br>## HTML文本实例化<br>### 基础<br><br><code>&lt;b&gt;</code> 粗体 <code>&lt;strong&gt;</code> 字体加强<br><br><code>&lt;big&gt;</code> 字体变大 <code>&lt;em&gt;</code> 字体强调<br><br><code>&lt;i&gt;</code> 意大利斜体 <code>&lt;small&gt;</code> 字体减小<br><br><code>&lt;sub&gt;</code> 字体下放 <code>&lt;sup&gt;</code>字体上放<br><br><code>&lt;del&gt;</code> 删除字 <code>&lt;ins&gt;</code> 下划线<br><br>### 拓展<br><em> <code>&lt;pre&gt;</code><br><br>&gt; 预格式文本，可以很好的显示计算机代码，可以对空行和空格进行控制。</em> <code>&lt;code&gt;</code>  <code>&lt;var&gt;</code><br><br>&gt; 常用于显示计算机/编程代码,变量<br><br><em> <code>&lt;kbd&gt;</code><br>&gt; 定义键盘代码</em> <code>&lt;tt&gt;</code><br>&gt; 定义打字机代码<br><br><em> <code>&lt;font color=&quot;&quot;&gt;</code><br><br>&gt; 设置字体颜色</em> <code>&lt;address&gt;</code><br><br>&gt; 可以在 HTML 文件中写地址<br><br><em> <code>&lt;acronym title=&quot;World Wide Web&quot;&gt;WWW&lt;/acronym&gt;</code>  <code>&lt;abbr title=&quot;etcetera&quot;&gt;etc.&lt;/abbr&gt;</code><br><br>&gt; <acronym> <abbr> 可以将 title 里的内容缩写为自己定义的形式<br><br>&gt; 并且首字母缩写</abbr></acronym></em> <code>&lt;bdo dir=&quot;rtl&quot;&gt;</code><br><br>&gt; 可以将 <bdo> </bdo> 中的内容倒序输出<br><br><em> <code>&lt;cite&gt;</code><br>&gt; 定义引用、引证</em> <code>&lt;dfn&gt;</code><br>&gt; 定义一个定义项目<br><br><em> <code>&lt;blockquote&gt;</code><br><br>&gt; 可以进行文本的长引用</em> <code>&lt;q&gt;</code><br><br>&gt; 可以进行文本的短引用<br><br><img src="https://note.youdao.com/yws/public/resource/9ff3d724040128e04e20deb0d34789df/xmlnote/5A4160735C624DA88A514AF325FAE5F2/1415" alt="image"><br><br><br>   <em> 使用 blockquote 元素的话，浏览器会插入换行和外边距<br>    而 q 元素不会有任何特殊的呈现。<br><br>### HTML字符实体<br>#### HTML实体<br>&gt;在 HTML 中，某些字符是预留的。<br><br>&gt;在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是<strong>标签</strong>。<br><br>&gt;如果希望正确地显示预留字符，必须在 HTML 源代码中使用字符实体（character entities）<br><br>实例<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;entity_name;   &amp;#entity_number;</span><br><span class="line"><span class="comment">&lt;!--如需显示小于号，我们必须这样写：--&gt;</span></span><br><span class="line">&amp;lt;  &amp;#60;</span><br></pre></td></tr></table></figure><br><br><strong>字符实体表格</strong><br><br>| 显示结果|  描述|  实体名称|  实体编号|<br>|———| —–| ——-|———-|<br>|        |  空格|  <code>&amp;nbsp;</code>|  <code>&amp;#160;</code>|<br>| &lt;      | 小于号 |<code>&amp;lt;</code> | <code>&amp;#60;</code>|<br>| &gt;       | 大于号|  <code>&amp;gt;</code>|  <code>&amp;#62;</code>|<br>| &amp;     | 和号 |  <code>&amp;amp;</code>| <code>&amp;#38;</code>|<br>| “   | 引号  |<code>&amp;quot;</code>|  |<code>&amp;#34;</code> |<br>|’  |撇号  |<code>&amp;apos;</code> (IE不支持)|  <code>&amp;#39;</code>|<br>| ￠ |分（cent） |<code>&amp;cent;</code>  |<code>&amp;#162;</code>|<br>| £| 镑（pound）|  <code>&amp;pound;</code> |<code>&amp;#163;</code>|<br>|¥ | 元（yen）  |<code>&amp;yen;</code>|<code>&amp;#165;</code>|<br>| €| 欧元（euro）|  <code>&amp;euro;</code>  |<code>&amp;#8364;</code>|<br>| §| 小节 | <code>&amp;sect;</code>|  <code>&amp;#167;</code>|<br>| ©| 版权（copyright）| <code>&amp;copy;</code>|  <code>&amp;#169;</code>|<br>|® |注册商标 | <code>&amp;reg;</code> |<code>&amp;#174;</code>|<br>|™ |商标  | <code>&amp;trade;</code>| <code>&amp;#8482;</code>|<br>|× |乘号 | <code>&amp;times;</code> |<code>&amp;#215;</code>|<br>|÷ |除号  |<code>&amp;divide;</code> | <code>&amp;#247;</code>|<br><br><br><br><br>—<br><br>#### 不间断空格(non-breaking space)<br>&gt;HTML 中的常用字符实体是不间断空格(<code>&amp;nbsp;</code>)。<br><br>&gt;浏览器总是会截短 HTML 页面中的空格。<br><br><br><br><br><br>—<br><br><br>## HTML链接实例<br>### 3种基本方式</em> <code>&lt;a href=&quot;/index.html&quot;&gt;</code><br><br>一个指向本网站中的一个页面的链接<br><br><em> <code>&lt;a href=&quot;http://www.microsoft.com/&quot;&gt;</code><br><br>一个指向另一个页面的链接</em> <code>&lt;a href=&quot; &quot;&gt;&lt;img src=&quot; &quot;/&gt;&lt;/a&gt;</code><br><br>将图像用来作链接<br><br><em> <code>&lt;a href=&quot;mailto:someone@microsoft.com?subject=Hello%20again&quot;&gt;发送邮件&lt;/a&gt;</code><br><br>使用邮件链接，其中应该使用 ==%20== 来代替单词之间的空格<br><br>也可以在链接后面传值，即可以添加邮件的内容<br><br><code>&amp;subject=Summer%20Party&amp;body=You%20are%20invited%20to%20a%20big%20summer%20party!</code><br>### 超链接标签的属性</em> <code>target=&quot;_blank&quot;</code><br><br>链接将在新窗口中打开，默认属性是在本窗口打开新网页<br><br><em>  <code>&lt;a href=&quot;#C4&quot;&gt;</code><br><br>链接将直接跳转至本页面的某个指定位置<br><br>### 图像</em> 定义背景图像<br><br><code>&lt;body background=&quot;/i/eg_background.jpg&quot;&gt;</code><br><br><em> 定义图像地图<br><br><code>map</code></em> 替换文本属性（==Alt==）<br><br>&gt; alt 属性用来为图像定义一串<strong>预备的可替换的文本</strong>。替换文本属性的值是用户定义的。<br><br><code>&lt;img src=&quot;boat.gif&quot; alt=&quot;Big Boat&quot;&gt;</code><br><br>&gt;浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息,如图 <img src="boat.gif" alt="Big Boat"><br><br><br><br><br><em> 排列图像位置<br><br>通过改变<code>&lt;img&gt;</code>的<code>align</code>属性</em> <code>bottom</code> <code>middle</code> <code>top</code><br><br>    <em> 实例 ：<code>&lt;img src=&quot;/i/eg_cute.gif&quot; align=&quot;bottom&quot;&gt;</code></em> 浮动文本 ：<code>align=&quot;left&quot;</code> <code>align=&quot;right&quot;</code><br><em> 调整图像尺寸 ：  <code>width=&quot;200&quot; height=&quot;200&quot;</code></em> 为图像添加链接属性<br>    <em>  实例 ：<br>        <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/example/html/lastpage.html"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">src</span>=<span class="string">"/i/eg_buttonnext.gif"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><br><br><br>### <strong>命名锚的语法：</strong><br><br><code>&lt;a name=&quot;label&quot;&gt;锚（显示在页面上的文本）&lt;/a&gt;</code><br><br><strong>提示</strong></em> 锚的名称可以是任何你喜欢的名字。<br><em> 您可以使用 id 属性来替代 name 属性，命名锚同样有效。</em> id适合对特定需求的进行锚定<br><em> class适合对一个组进行整体锚定<br><br><br><br><strong>实例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--首先，我们在 HTML 文档中对锚进行命名（创建一个书签）：--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"tips"</span>&gt;</span>基本的注意事项 - 有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--然后，我们在同一个文档中创建指向该锚的链接：--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#tips"</span>&gt;</span>有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--您也可以在其他页面中创建指向该锚的链接：--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.w3school.com.cn/html/html_links.asp#tips"</span>&gt;</span>有用的提示<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--在上面的代码中，我们将 # 符号和锚名称添加到 URL 的末端，就可以直接链接到 tips 这个命名锚了。--&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><br>## HTML背景<br>1. 背景颜色（Bgcolor）<br><br>&gt; 背景颜色属性将背景设置为某种颜色。属性值可以是十六进制数、RGB 值或颜色名。<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"#000000"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"rgb(0,0,0)"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>2. 背景（Background）<br>背景属性将背景设置为图像。</em> 属性值可以为图像的URL，可可以是相对路径<br>* gif 和 jpg 文件均可用作 HTML 背景<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">"clouds.gif"</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><font color="orange"><strong>注意</strong>：</font><ul><li>如果图像尺寸小于浏览器窗口，那么图像将在整个浏览器窗口进行复制。</li><li>使用背景图片应考虑是否增加了页面的加载速度，大小不应超过10kb</li><li>背景图片应与页面的各种元素搭配，如文字等</li><li>背景图片不应太华丽，可能会导致主次不分</li></ul><hr><h2 id="HTML-列表-–可嵌套"><a href="#HTML-列表-–可嵌套" class="headerlink" title="HTML 列表 –可嵌套"></a>HTML 列表 –可嵌套</h2><ul><li>种类<ul><li><code>&lt;ur&gt;</code><ul><li>无序列表 <em> </em> </li><li><code>&lt;li&gt;</code></li><li>扩展<ul><li>添加type属性</li><li><code>type =&quot;disc/circle/square&quot;</code></li></ul></li></ul></li><li><code>&lt;ol&gt;</code><ul><li>有序列表 1. 2.</li><li>扩展<ul><li>添加type属性</li><li><code>type =&quot;a/A/I/i&quot;</code></li></ul></li></ul></li><li><code>&lt;dl&gt;</code><ul><li>自定义列表</li><li><code>&lt;dt&gt;</code>  : 项目的定义 definiton term</li><li><code>&lt;dd&gt;</code> : 自定义列表项的内容 definition detail</li></ul></li></ul></li></ul><h2 id="更多方法"><a href="#更多方法" class="headerlink" title="更多方法"></a>更多方法</h2><h3 id="样式style中的技巧"><a href="#样式style中的技巧" class="headerlink" title="样式style中的技巧"></a>样式style中的技巧</h3><ul><li><code>li:nth-child(3){ color: red; }</code> : 将每个li列表中的第3个的字体颜色修改为红色</li></ul><blockquote><p>注意： 此修改为对全体列表的第3个进行操作，若需要单独操作，可在代码前加上<code>ul:first-of-type</code></p></blockquote><hr><h2 id="HTML块-amp-内联元素"><a href="#HTML块-amp-内联元素" class="headerlink" title="HTML块&amp;内联元素"></a>HTML块&amp;内联元素</h2><h3 id="使用-lt-style-gt-定制样式"><a href="#使用-lt-style-gt-定制样式" class="headerlink" title="使用&lt;style&gt;定制样式"></a>使用<code>&lt;style&gt;</code>定制样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.cities</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:balck</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">margin</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>解释<ul><li><code>.cites</code> : 设置cities类的样式</li><li>margin : 设置页外边距  <ul><li><code>auto</code> ： 设置页面左右间距相同</li></ul></li><li>padding ： 设置页内边距</li></ul></li></ul><h3 id="块级元素-–在前后显示折行"><a href="#块级元素-–在前后显示折行" class="headerlink" title="块级元素 –在前后显示折行"></a>块级元素 –在前后显示折行</h3><p><strong>block level element</strong></p><ul><li>块级<ul><li><code>&lt;h1&gt; &lt;p&gt; &lt;ur&gt; &lt;table&gt;</code></li><li><code>&lt;div&gt;</code> : 如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于对大的内容块设置样式属性</li></ul></li></ul><p>HTML<code>&lt;div&gt;</code><br>: 是块级元素。它能够用作其他 HTML 元素的容器。</p><ul><li>设置 <code>&lt;div&gt;</code> 元素的类，使我们能够为相同的<code>&lt;div&gt;</code> 元素设置相同的类：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cities"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>London<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">London is the capital city of England. </span><br><span class="line">It is the most populous city in the United Kingdom, </span><br><span class="line">with a metropolitan area of over 13 million inhabitants.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="div属性"><a href="#div属性" class="headerlink" title="div属性"></a>div属性</h4><ul><li><code>min-width</code> ： 设置最小页面宽度</li></ul><p><dt><font color="red">注意：</font></dt></p><dd>为防止出现div标签中出现背景颜色的空白，可使用footer文档来解决</dd><br><br><br><dd>另一方案：<code>overflow: hidden</code></dd><br><br><br><br>#### footer定义和用法<br><br><code>&lt;footer&gt;</code> 标签定义文档或节的页脚。<br><br><code>&lt;footer&gt;</code>   元素应当含有其包含元素的信息。<br><br>&gt;页脚通常包含文档的作者、版权信息、使用条款链接、联系信息等等。<br>&gt;您可以在一个文档中使用多个 <code>&lt;footer&gt;</code> 元素。<br><br><br><br><br><em> <strong>footer样式属性</strong><br><br><ol type="i"><br>  <li><code>clean: both;</code> : 可以去除div中的背景空隙</li><br><br></ol><br><br><br>解释<br><br><img src="https://cdn.css-tricks.com/wp-content/csstricks-uploads/unclearedfooter.png" alt="img"><br><br><img src="https://cdn.css-tricks.com/wp-content/csstricks-uploads/clearedfooter.png" alt="img"><br><br>—<br><br><br>### 内联元素 –通常不以新行开始<br><br><strong>inline element</strong></em> 内联元素<br>    <em> <code>&lt;b&gt; &lt;td&gt; &lt;a&gt; &lt;img&gt;</code>    </em> <code>&lt;span&gt;</code> :当与 CSS 一同使用时，<code>&lt;span&gt;</code> 元素可用于为部分文本设置样式属性<br><br><br><br><br>HTML <code>&lt;span&gt;</code><br>: 是行内元素，能够用作文本的容器。<br><br><em> 设置 <code>&lt;span&gt;</code> 元素的类，能够为相同的 <code>&lt;span&gt;</code> 元素设置相同的样式。<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">span</span><span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>重要的<span class="tag">&lt;/<span class="name">span</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>—<br><br>## HTML表格<br><br>  HTML | 用途<br>—| —<br><code>&lt;thead&gt;</code>|表格的页眉<br><code>&lt;tbody&gt;</code> | 定义表格的主体<br> <code>&lt;tfoot&gt;</code>|定义表格的页脚</em> 每个表格由 table 标签开始。<br><br><em> 每个表格行由 tr 标签开始。</em> 每个表格数据由 td 标签开始。<br><br>    <em> 实例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--两行两列表格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>400<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></em> 表格的背景颜色与图像<br>    <em> 设置整个表格<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">bgcolor</span>=<span class="string">"red"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">background</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure> </em> 设置个别格子<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">"1"</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><em> 表格和边框属性    </em> <code>border=&quot;&quot;</code><br>    <em> 如果不定义边框属性，表格将不显示边框。有时这很有用，但是大多数时候，我们希望显示边框。</em> 表格的标题<br>    <em> <code>&lt;caption&gt;我的标题&lt;/caption&gt;</code></em> 表格的表头<br>    <em> 表格的表头使用 <code>&lt;th&gt;</code> 标签进行定义。<br>        大多数浏览器会把表头显示为粗体居中的文本     </em> 实例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>这是表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><b><font color="orange">注意</font></b><br>: 为了避免空的单元格的边框没有被显示出来。这种情况，在空单元格中添加一个空格占位符，就可以将边框显示出来。<br><em> <code>&lt;td&gt;&amp;nbsp;&lt;/td&gt;</code>    </em> 空格由和号开始 (“&amp;”)，然后是字符”nbsp”，并以分号结尾(“;”)<br><br><em> 设置跨越多行或多列的表格    </em> <code>&lt;th colspan=&quot;2&quot;&gt;</code>  <code>&lt;th rowspan=&quot;2&quot;&gt;</code><br><br><em> 设置单元格内文字的位置    </em> <code>&lt;td align=&quot;left&quot;&gt; FIFT &lt;/td&gt;</code><br><br><em> 表格内也可以设置标签    </em> 实例<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是另一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>这个单元包含一个表格：</span><br><span class="line">   <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>A<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>B<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>C<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>D<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>这个单元包含一个列表：</span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>菠萝<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>HELLO<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><em> 创建单元格内容与其边框之间的空白      </em>   <code>cellpadding</code><br><em> 增加单元格之间的距离。     </em> <code>cellspacing</code><br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">cellpadding</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>First<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">cellspacing</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>First<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Row<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>—<br><br>## HTML5的网站布局<br>HTML5 提供的新语义元素来定义网页的不同部分：<br><br>### HTML5布局语义元素<br><br>| HTML5 | 语义元素 |<br>|——-| ——–|<br>| header | 定义文档或节的页眉|<br>| nav | 定义导航链接的容器|<br>| section | 定义文档中的节 |<br>|article | 定义独立的自包含文章|<br>| aside | 定义内容之外的内容（比如侧栏）|<br>| footer | 定义文档或节的页脚|<br>| details | 定义额外的细节|<br>| summary | 定义 details 元素的标题|<br><br>### 例子<br><br><em> 可以直接配合样式定义块<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#header</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>City Gallery<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></em> 可以直接使用布局标签<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  header &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;   </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>City Gallery<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>#### 注意事项<br><br><em> <code>&lt;table&gt;</code> 元素不是作为布局工具而设计的。<br>  <code>&lt;table&gt;</code>元素的作用是显示表格化的数据。<br><br><br>### 提交列表<br><br>#### 账号信息<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"HTML_submit"</span> <span class="attr">method</span>=<span class="string">"get"</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>Enter your name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">""</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">    这是文本输入框，可以输入内容</span><br><span class="line">  <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><font color="orange"><strong>解释</strong></font></em> 设置GET可以在URL中显示传值内容<br><br><code>test.html?name=陈俊杰&amp;comment=这是测试</code><br><br>&gt; 其中name、comment 均为id属性的内容<br><br><br><br><br><em> <code>label</code> : 标签    </em> 设置输入信息<br>    <em> 属性<br>        + for : 将<code>label</code>与<code>input</code>连接起来，可点击<code>label</code>直接选中输入框</em> <code>input</code> ： 输入框<br><br>    - 类型type：<br>        -  text : 文本输入<br>        -  submit : 提交框<br>        -  value : 设置文本值<br>        -  name  : 规定 input 元素的名称<br>        -  reset : 重置输入框<br>        -  hidden ： 隐藏密码显示<br><br><em> <code>textarea</code> : 文本输入区域<br>    + 可以输入文本<br>    + rows cols 设置输入框的长宽  (同时也可以使用CSS来设置)<br><br><img src="http://chuantu.biz/t6/338/1530677046x-1404817670.png" alt="img"><br><br><br><strong>优化</strong><br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>Enter Your Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"comment"</span>&gt;</span>You Comment <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"comment"</span> <span class="attr">name</span>=<span class="string">"comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"go"</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>Enter Your Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"comment"</span>&gt;</span>You Comment <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"comment"</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">cols</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"go"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">form</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">label</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#292929</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><img src="http://chuantu.biz/t6/338/1530678514x-1404817670.png" alt="img"><br><br><br><br><strong>注释</strong>：</em> 只有设置了 <code>name</code> 属性的表单元素才能在提交表单时传递它们的值。<br><em> <code>name</code> 属性用于对提交到服务器后的表单数据进行标识，或者在客户端通过 JavaScript 引用表单数据。</em> <code>for - name - id</code> 搭配使用<br><em> <code>cursor</code> 属性规定要显示的光标的类型（形状）。    </em>  <code>cursor: pointer</code> 光标呈现为指示链接的指针（一只手）<br><br><br>#### 复选框<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"css"</span>&gt;</span>Do You Like Css<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"css"</span> <span class="attr">id</span>=<span class="string">"css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"css"</span> <span class="attr">id</span>=<span class="string">"css"</span>/&gt;</span></span><br></pre></td></tr></table></figure><br><br><strong>复选框类型</strong><br><br><em> checkbox ： 方形</em> radio ： 圆形<br><br><strong>可以设置多个复选框</strong><br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"css"</span> <span class="attr">id</span>=<span class="string">"css"</span>/&gt;</span>HTML</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"css"</span> <span class="attr">id</span>=<span class="string">"css"</span>/&gt;</span>CSS</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"css"</span> <span class="attr">id</span>=<span class="string">"css"</span>/&gt;</span>PYTOHN</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--这类复选框一旦选中，就不能取消--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span>HTML</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>/&gt;</span>CSS</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> /&gt;</span>PYTOHN</span><br></pre></td></tr></table></figure><br><br><strong>上下拉动的复选框</strong><br><br>范例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>Apples</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>Bananas</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>Cherries</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>—<br><br>## HTML 脚本<br>&gt; JavaScript 使 HTML 页面具有更强的动态和交互性。。<br><br><em> <strong>语法</strong>      </em> 基本语法 ： <code>&lt;script type=&quot;text/javascript&quot;&gt;</code><br>      <em> 对于不支持Javascript的浏览器 ： <code>&lt;noscript&gt;&lt;/noscript&gt;</code></em> <strong>解释</strong><br>      <em> <code>&lt;script&gt;</code>标签用于定义<strong>客户端</strong>脚本，可以包含脚本语言，也可以通过<strong>src属性</strong>指向外部脚本文件      </em> 只有在浏览器不支持脚本或者禁用脚本时，才会显示 <code>noscript</code> 元素中的内容<br><br><br><strong>范例</strong><br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><br><font color="orange"><strong>注意</strong></font><br><br><strong>如何应付老式的浏览器</strong><br>&gt;如果浏览器无法识别 <code>&lt;script&gt;</code>标签，那么<code>&lt;script&gt;</code>标签所包含的内容将以<strong>文本方式</strong>显示在页面上。<br><br><em> 解决办法：将脚本隐藏在<strong>注释标签</strong>当中。</em> 解释： 对于无法识别 <code>&lt;script&gt;</code> 标签的浏览器将忽略这些注释，所以不会将标签的内容显示到页面上。而那些新的浏览器将读懂这些脚本并执行它们，即使代码被嵌套在注释标签内。<br><br><strong>范例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">&lt;!--</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"Hello World!"</span>)</span></span><br><span class="line"><span class="actionscript"><span class="comment">//--&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>—<br><br>## HTML头部元素<br><strong>头部基础信息</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=gb2312"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Language"</span> <span class="attr">content</span>=<span class="string">"zh-cn"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>定义标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>### <code>&lt;head&gt;</code>元素<br>&gt;标签都可以添加到 head 部分：<code>&lt;title&gt;、&lt;base&gt;、&lt;link&gt;、&lt;meta&gt;、&lt;script&gt;</code> 以及 <code>&lt;style&gt;</code><br><br><br><br>### meta属性<br>&gt; 元数据metadata提供数据的信息，元数据不会显示在页面上，但是机器是可读的<br>&gt; meta属性标识了创作者和编辑软件、文档和它的关键词<br>&gt; meta属性始终位于 head 元素中<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=gb2312"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span></span></span><br><span class="line"><span class="tag"><span class="attr">content</span>=<span class="string">"地址内容"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"revised"</span></span></span><br><span class="line"><span class="tag"><span class="attr">content</span>=<span class="string">"Keithxodoy,10/7/18"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"generator"</span></span></span><br><span class="line"><span class="tag"><span class="attr">content</span>=<span class="string">"Sublime"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span></span></span><br><span class="line"><span class="tag"><span class="attr">content</span>=<span class="string">"HTML examples"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span></span></span><br><span class="line"><span class="tag"><span class="attr">content</span>=<span class="string">"HTML, DHTML, CSS, XHTML, JAVAScript, VBScript"</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><em> 重新定向新地址<br><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Refresh"</span> <span class="attr">content</span>=<span class="string">"5;url=网页地址"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">URL 是 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.地址.com"</span>&gt;</span>http://www.地址.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>您将在 5 秒内被重定向到新的地址。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>如果超过 5 秒后您仍然看到本消息，请点击上面的链接。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><br><br><br><font color="orange"><strong>解释</strong></font></em> 针对搜索引擎的定义页面的描述： <code>&lt;meta name=&quot;description&quot; content=&quot;HTML examples&quot;&gt;</code><br><em> 针对搜索引擎的定义页面的关键词：<code>&lt;meta name=&quot;keywords&quot; content=&quot;HTML, CSS, XML&quot; /&gt;</code><br><br>—<br><br><br><br><br>### base标签</em> 使用 <code>base</code>标签使页面中的<strong>所有标签</strong>在新窗口中打开<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">target</span>=<span class="string">"_blank"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>* 使用<code>base</code>标签使得页面上的所有链接规定默认地址<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"http://"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>### style元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>: yellow&#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">p</span> &#123;<span class="attribute">color</span>: blue&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br>—<br><br>## HTML 框架<br>### 框架理解<br><dl><br><dt>框架</dt><br><dd>通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。每份HTML文档称为一个框架，并且每个框架都独立于其他的框架。</dd><p><dt>使用框架的坏处：</dt><br>  <dd>开发人员必须同时跟踪更多的HTML文档</dd><br>  <dd>很难打印整张页面</dd><br></p></dl><p></p><h3 id="框架相关标签"><a href="#框架相关标签" class="headerlink" title="框架相关标签"></a>框架相关标签</h3><blockquote><p>frameset 标签也被某些文章和书籍译为框架集</p></blockquote><h4 id="框架结构标签（-lt-frameset-gt-）"><a href="#框架结构标签（-lt-frameset-gt-）" class="headerlink" title="框架结构标签（&lt;frameset&gt;）"></a>框架结构标签（<code>&lt;frameset&gt;</code>）</h4><ul><li>定义如何将窗口分割为框架</li></ul><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>不能将 <code>&lt;body&gt;&lt;/body&gt;</code> 标签与 <code>&lt;frameset&gt;&lt;/frameset&gt;</code> 标签同时使用！</p><h4 id="框架标签（frame）"><a href="#框架标签（frame）" class="headerlink" title="框架标签（frame）"></a>框架标签（<code>frame</code>）</h4><ul><li>Frame 标签定义了放置在每个框架中的 HTML 文档。</li></ul><h5 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h5><p>为了避免框架有可见边框,用户可以拖动边框来改变它的大小</p><p>在 <code>&lt;frame&gt;</code> 标签中加入：<code>noresize=&quot;noresize&quot;</code></p><p><strong>实例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"50%,*,25%"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_a.html"</span> <span class="attr">noresize</span>=<span class="string">"noresize"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="框架类型"><a href="#框架类型" class="headerlink" title="框架类型"></a>框架类型</h3><h4 id="垂直框架"><a href="#垂直框架" class="headerlink" title="垂直框架"></a>垂直框架</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"25%,50%,25%"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_a.html"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_b.html"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_c.html"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="水平框架"><a href="#水平框架" class="headerlink" title="水平框架"></a>水平框架</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">"25%,50%,25%"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_a.html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_b.html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_c.html"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="noframes框架"><a href="#noframes框架" class="headerlink" title="noframes框架"></a><strong>noframes</strong>框架</h4><p><code>noframes</code> 元素可为那些不支持框架的浏览器显示文本。</p><p><code>noframes</code> 元素位于 frameset 元素内部。</p><p><strong>重要事项</strong>：如果您希望 frameset 添加 <code>&lt;noframes&gt;</code> 标签，就必须把其中的文本包装在<code>&lt;body&gt;&lt;/body&gt;</code>标签中！</p><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"25%,50%,25%"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_a.html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_b.html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_c.html"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>您的浏览器无法处理框架！<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noframes</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="混合框架"><a href="#混合框架" class="headerlink" title="混合框架"></a>混合框架</h4><p><strong>实例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">"50%,50%"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_a.html"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"25%,75%"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_b.html"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_c.html"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="导航框架"><a href="#导航框架" class="headerlink" title="导航框架"></a>导航框架</h4><p><strong>实例</strong></p><p>导航框架包含一个将第二个框架作为目标的链接列表。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"120,*"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/html_contents.html"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/frame_a.html"</span> <span class="attr">name</span>=<span class="string">"showframe"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="https://note.youdao.com/yws/public/resource/9ff3d724040128e04e20deb0d34789df/xmlnote/7E981BE3DEB6499E8741486556744F6E/1562" alt="image"></p><h4 id="内联框架（HTML-页中的框架）"><a href="#内联框架（HTML-页中的框架）" class="headerlink" title="内联框架（HTML 页中的框架）"></a>内联框架（HTML 页中的框架）</h4><ul><li>应用 ： <code>iframe</code> 用于在网页内显示网页</li></ul><ul><li>语法 ： <code>&lt;iframe src=&quot;URL&gt;&lt;/frame&gt;</code>  其中URL指向隔离页面的位置<ul><li>拓展属性 <ol><li><code>height=&quot;200&quot; width=&quot;200</code> : 定义iframe的高度与宽度，默认单位为像素</li><li><code>frameborder=&quot;0</code> : 用于规定是否显示iframe周围的边框，为”0”即可移除边框</li></ol></li></ul></li></ul><p><strong>实例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"/html/index.asp"</span> <span class="attr">height</span>=<span class="string">"300px"</span> <span class="attr">width</span>=<span class="string">"99%"</span> <span class="attr">style</span>=<span class="string">"margin-top:15px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>使用 iframe 作为链接的目标<br>iframe 可用作链接的目标（target）。</li></ul><p>链接的 target 属性必须引用 iframe 的 name 属性</p><p><strong>实例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe.html"</span> <span class="attr">name</span>=<span class="string">"iframe_a"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.w3school.com.cn"</span> <span class="attr">target</span>=<span class="string">"iframe_a"</span>&gt;</span>w3school<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><dt><b>解释</b></dt></p><dd>使用<code>iframe</code>的<code>name</code>属性，与<code>a</code>的<code>target</code>关联，使其指向<code>a</code>中的超链接</dd><h4 id="表格中的框架"><a href="#表格中的框架" class="headerlink" title="表格中的框架"></a>表格中的框架</h4><ul><li>分别设置 上 ， 下 ，上下 ，两侧 的表格框线</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> </span></span><br><span class="line"><span class="tag"><span class="attr">frame</span>=<span class="string">"above"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span></span></span><br><span class="line"><span class="tag"><span class="attr">frame</span>=<span class="string">"below"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span></span></span><br><span class="line"><span class="tag"><span class="attr">frame</span>=<span class="string">"hsides"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> </span></span><br><span class="line"><span class="tag"><span class="attr">frame</span>=<span class="string">"vsides"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="框架属性"><a href="#框架属性" class="headerlink" title="框架属性"></a>框架属性</h3><ul><li><code>noresize=&quot;noresize&quot;</code></li></ul><p>添加该属性后，框架是不可调整尺寸的</p><ul><li><p>设置指向另一个文件内指定的节的链接</p><p><code>&lt;frame src=&quot;/example/html/link.html#C6&quot;&gt;</code></p></li><li><p>使用框架导航跳转至指定的节</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"180,*"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/content.html"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"/example/html/link.html"</span> <span class="attr">name</span>=<span class="string">"showframe"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>target=&quot;_top&quot;</code> ：跳出被锁定的框架</li></ul><hr><h2 id="HTML响应式WEB设计"><a href="#HTML响应式WEB设计" class="headerlink" title="HTML响应式WEB设计"></a>HTML响应式WEB设计</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul><li>什么是响应式 Web 设计？<br>RWD 指的是响应式 Web 设计（Responsive Web Design）<ul><li>RWD 能够以可变尺寸传递网页</li><li>RWD 对于平板和移动设备是必需的</li></ul></li></ul><h3 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h3><ol><li>手工搭建，设置样式<br><br></li><li>使用现成的 CSS 框架<br>使用 Bootstrap<blockquote><p>Bootstrap 是最流行的开发响应式 web 的 HTML, CSS, 和 JS 框架。<br>Bootstrap 帮助您开发在任何尺寸都外观出众的站点：显示器、笔记本电脑、平板电脑或手机</p></blockquote></li></ol><hr><h2 id="XHTML"><a href="#XHTML" class="headerlink" title="XHTML"></a>XHTML</h2><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p>XHTML : EXtensible HyperText Markup Language</p><p>疑问：</p><ol><li>XHTML 中有哪些不同的 DTD ？<br>Strict, Transitional, Frameset （其中Transitional最常用）</li></ol><p><strong>诞生原因</strong></p><blockquote><p>由于互联网存在一些不同的浏览器技术。其中一些在计算机上运行，而另一些可能在移动电话或其他小型设备上运行。小型设备往往缺乏解释“糟糕”的标记语言的资源和能力。<br>所以 - 通过结合 XML 和 HTML 的长处，开发出了 XHTML，即XHTML 是作为 XML 被重新设计的 HTML。</p></blockquote><h3 id="由-HTML-–-gt-XHTML"><a href="#由-HTML-–-gt-XHTML" class="headerlink" title="由 HTML –&gt; XHTML"></a>由 HTML –&gt; XHTML</h3><p><strong>步骤：</strong></p><ol><li>向每张页面的第一行添加 <code>XHTML &lt;!DOCTYPE&gt;</code></li><li>向每张页面的 html 元素添加 <code>xmlns</code> 属性</li><li>把所有元素名改为<strong>小写</strong></li><li>关闭所有空元素</li><li>把所有属性名改为小写</li><li>为所有属性值加<strong>引号</strong></li></ol><p><font color="orange"><strong>须知：</strong></font><br>HTML 会被 XHTML 取代。</p><h3 id="XHTML-的注意事项"><a href="#XHTML-的注意事项" class="headerlink" title="XHTML 的注意事项"></a>XHTML 的注意事项</h3><p><strong>文档结构</strong></p><ul><li>XHTML DOCTYPE 是强制性的</li><li><code>&lt;html&gt;</code> 中的 <code>XML namespace</code>属性是强制性的</li><li><code>&lt;html&gt;、&lt;head&gt;、&lt;title&gt;</code> 以及 <code>&lt;body&gt;</code> 也是强制性的</li></ul><p><strong>元素语法</strong></p><ul><li>XHTML 元素必须正确嵌套</li><li>XHTML 元素必须<strong>始终关闭</strong></li><li>XHTML 元素必须小写</li><li>XHTML 文档必须有一个根元素</li></ul><p><strong>属性语法</strong></p><ul><li>XHTML 属性必须使用小写</li><li>XHTML 属性值必须用引号包围</li><li>XHTML 属性最小化也是禁止的</li></ul><p>语法：</p><ol><li>XHTML 中不允许简写属性</li></ol><hr><h2 id="Web-Server"><a href="#Web-Server" class="headerlink" title="Web Server"></a>Web Server</h2><p>个人服务器网站搭建</p><ul><li>使用因特网服务提供商(ISP)<ul><li>优点<ul><li>连接速度快，拥有连接因特网的高速连接</li><li>硬件强大，最好查看 ISP 是否提供高效的负载平衡，以及必要的备份服务器</li><li>安全性、可靠性高</li></ul></li></ul><ul><li>选择 ISP 的注意事项<ul><li>24小时支持服务(免费电话服务等)</li><li>确保 ISP 执行<strong>每日备份</strong>的工作</li><li>ISP 的流量限制，避免因为网站访问人数激增而引起预料外的支付费用</li><li>ISP 的带宽与内容限制，确保可以发布图片或视频、音频等</li><li>ISP 支持所需的 e-mail 功能</li><li>ISP 确保可以支持个人所需访问的数据库</li></ul></li></ul></li></ul><hr><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ul><li>HTML 的框架是什么?     —见HTML框架</li><li>如何解决使用div时，设置背景出现空白间隙？  —见块级元素的div</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;逐步学会HTML&quot;&gt;&lt;a href=&quot;#逐步学会HTML&quot; class=&quot;headerlink&quot; title=&quot;逐步学会HTML&quot;&gt;&lt;/a&gt;逐步学会HTML&lt;/h1&gt;
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Python进阶</title>
    <link href="http://yoursite.com/2018/06/24/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/06/24/函数式编程/</id>
    <published>2018-06-24T13:51:06.000Z</published>
    <updated>2018-07-11T15:02:41.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数式编程"><a href="#函数式编程" class="headerlink" title="函数式编程"></a>函数式编程</h1><a id="more"></a><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><p>写代码要遵循==开发封闭==原则，虽然这个原则是用的面向对象开发，但是也适用于函数式编程，简单来说，它规定<strong>已经实现的功能代码不允许被修改</strong>，但可以被扩展，即：</p><blockquote><p>封闭：已实现的功能代码块</p></blockquote><blockquote><p>开放：对扩展开发</p></blockquote><hr><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w1</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        <span class="keyword">return</span> func()</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@w1       # 相当于执行了 w1(f1())</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br></pre></td></tr></table></figure><p>当写完这段代码后（函数未被执行、未被执行、未被执行），python解释器就会从上到下解释代码，步骤如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def w1(func):  ==&gt;将w1函数加载到内存</span><br><span class="line"><span class="meta">@w1</span></span><br></pre></td></tr></table></figure></p><p>没错，从表面上看解释器仅仅会解释这两句代码，<strong>因为函数在没有被调用之前其内部代码不会被执行。</strong></p><p>从表面上看解释器着实会执行这两句，但是<br> @w1 这一句代码里却有大文章</p><p> @函数名<br> :  是python的一种<strong>语法糖</strong>。</p><p>如上例 <code>@w1</code>内部会执行以下操作<br>: 执行w1函数，并将 <code>@w1</code> 下面的 函数 作为 w1 函数的<strong>参数</strong><br>即：<code>@w1</code> 等价于 <code>w1(f1)</code>。</p><p>所以，内部就会去执行：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inner</span>:</span></span><br><span class="line">    <span class="comment">#验证</span></span><br><span class="line">    <span class="keyword">return</span> f1() <span class="comment"># func是参数，此时 func 等于 f1</span></span><br><span class="line"><span class="keyword">return</span> inner <span class="comment"># 返回的 inner，inner代表的是函数，非执行函数</span></span><br><span class="line"><span class="comment"># 其实就是将原来的 f1 函数塞进另外一个函数中。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将执行完的 w1 函数返回值赋值给@w1下面的函数的函数名</span></span><br><span class="line"><span class="comment"># w1函数的返回值是：</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">inner</span>:</span></span><br><span class="line">        <span class="comment">#验证</span></span><br><span class="line">        <span class="keyword">return</span> 原来f1()  <span class="comment"># 此处的 f1 表示原来的f1函数</span></span><br><span class="line"><span class="comment"># 然后，将此返回值再重新赋值给 f1，即：</span></span><br><span class="line"></span><br><span class="line">new_f1 = <span class="function"><span class="keyword">def</span> <span class="title">inner</span>:</span></span><br><span class="line">            <span class="comment">#验证</span></span><br><span class="line">            <span class="keyword">return</span> 原来f1()</span><br></pre></td></tr></table></figure></p><p>如此一来， 即执行了验证的功能，又执行了原来 f 函数的内容，并将原 f1 函数返回值,<br> 返回给业务调用着。</p><h4 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 一个参数：</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w1</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(arg)</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        <span class="keyword">return</span> func(arg)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(arg)</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 两个参数：</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w1</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(arg1,arg2)</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        <span class="keyword">return</span> func(arg1,arg2)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(arg1,arg2)</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br></pre></td></tr></table></figure><h5 id="问题-装饰具有处理n个参数的函数的装饰器？"><a href="#问题-装饰具有处理n个参数的函数的装饰器？" class="headerlink" title="问题: 装饰具有处理n个参数的函数的装饰器？"></a>问题: 装饰具有处理n个参数的函数的装饰器？</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w1</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        <span class="keyword">return</span> func(*args,**kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(arg1,arg2,arg3)</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br></pre></td></tr></table></figure><h5 id="问题：一个函数可以被多个装饰器装饰吗？"><a href="#问题：一个函数可以被多个装饰器装饰吗？" class="headerlink" title="问题：一个函数可以被多个装饰器装饰吗？"></a>问题：一个函数可以被多个装饰器装饰吗？</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w1</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        <span class="keyword">return</span> func(*args,**kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">w2</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        <span class="comment"># 验证1</span></span><br><span class="line">        <span class="comment"># 验证2</span></span><br><span class="line">        <span class="comment"># 验证3</span></span><br><span class="line">        <span class="keyword">return</span> func(*args,**kwargs)</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"><span class="meta">@w1</span></span><br><span class="line"><span class="meta">@w2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">(arg1,arg2,arg3)</span>:</span></span><br><span class="line">    print(<span class="string">'f1'</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="Lambda函数（匿名函数）"><a href="#Lambda函数（匿名函数）" class="headerlink" title="Lambda函数（匿名函数）"></a>Lambda函数（匿名函数）</h2><ul><li>函数 ： 最大程度地复用代码<ul><li>存在问题：若函数很小，很短，则会造成啰嗦，不方便阅读代码</li></ul></li><li>lambda表达式<ul><li>一个表达式，函数体相对简单</li><li>用法<ul><li>以lambda开头</li><li>紧跟一定的参数</li><li>参数后面用冒号和表达式主题分开</li><li>只是一个表达式，没有return</li></ul></li><li>实例<ul><li><code>stm = lambda x: 100 * x</code></li><li><code>stm(89)</code> ==&gt;<code>8900</code></li></ul></li></ul></li></ul><hr><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><ul><li>定义 ： 把<strong>函数作为参数</strong>使用的函数</li><li>注意<ul><li>函数名称就是一个变量，即函数可以作为参数</li></ul></li><li>举例<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funA</span><span class="params">(n)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> n * <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funB</span><span class="params">(n)</span>:</span></span><br><span class="line">  <span class="keyword">return</span> funA(n) * <span class="number">3</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="map函数"><a href="#map函数" class="headerlink" title="map函数"></a>map函数</h3><ul><li>对队列里的每个元素进行操作，即映射操作</li><li>map函数是系统提供的具有映射功能的函数，返回值是一个<strong>迭代对象</strong>,类型为<strong>map类</strong><ul><li>注意：若用列表生成式得到的结果为空</li></ul></li><li>格式： <code>map(func, *iterables)</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># map举例</span></span><br><span class="line"><span class="comment"># 列表里的每个元素都乘以10</span></span><br><span class="line"></span><br><span class="line">l1 = [ i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">print(l1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> li:</span><br><span class="line">    l2.append(i*<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用map来实现</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multen</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> n*<span class="number">10</span></span><br><span class="line"></span><br><span class="line">l2 = map(multen, l1 )  <span class="comment"># multen函数作为map函数的一个参数</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> l2:</span><br><span class="line">    print(l2)</span><br></pre></td></tr></table></figure><hr><h3 id="reduce函数"><a href="#reduce函数" class="headerlink" title="reduce函数"></a>reduce函数</h3><ul><li>作用： 归并，缩减 ，把可迭代对象最后归并为一个结果</li><li>作为参数的函数要求： <ul><li>必须有两个参数</li><li>必须有返回结果</li></ul></li><li>理解 ：<code>reduce([1,2,3]) == f(f(f(1),2),3)</code>  即函数嵌套</li><li>注意： reduce需要导入functools包</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个操作函数</span></span><br><span class="line"><span class="comment"># 加入操作函数来相加</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line"><span class="comment">## 对列表[1,2,3]执行add的reduce操作</span></span><br><span class="line"></span><br><span class="line">rst = reduce(add, [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">print(rst)</span><br></pre></td></tr></table></figure><hr><h3 id="filter-函数"><a href="#filter-函数" class="headerlink" title="filter 函数"></a>filter 函数</h3><blockquote><p>过滤函数：对一组数据进行过滤，符合条件的数据会产生一个<strong>新的列表</strong>返回</p></blockquote><p>与map函数比较</p><ul><li>相同 ： <ul><li>都对列表的每个元素逐一进行操作</li></ul></li><li><p>不同 ：</p><ul><li>map 会生成一个跟原来数据相对应的新队列</li><li>filter 不一定，<strong>只有符合条件</strong>的才会进入新队列</li></ul></li><li><p>filter函数写法</p><ul><li>利用给定函数进行判断</li><li>返回值为一个<strong>布尔值</strong></li><li>调用格式 ： filter(f,data)   f 为过滤函数  data 为数据</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 案例 过滤偶数数据形成新列表</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isEven</span><span class="params">(a)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> a%<span class="number">2</span> ==<span class="number">0</span></span><br><span class="line"></span><br><span class="line">list = [<span class="number">3</span>,<span class="number">4</span>,<span class="number">56</span>,<span class="number">3</span>,<span class="number">455</span>,<span class="number">67</span>,<span class="number">4</span>,<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">rst = filter(isEven, l)</span><br><span class="line"></span><br><span class="line">print([i <span class="keyword">for</span> i <span class="keyword">in</span> rst])</span><br></pre></td></tr></table></figure><font color="orange"><strong>注意事项</strong></font><ul><li>返回的filter内容是一个<strong>可迭代对象</strong>,需要逐个输出</li></ul><hr><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li>把一个序列按照<strong>给定算法</strong>进行排序</li><li>key : 在排序前，对每一个元素进行 key 函数运算，可理解为按照<strong> key 函数定义的逻辑</strong>进行排序 (key函数为排序函数的内嵌参数)</li><li>python2 python3 的差别较大</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 排序案例1</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">21</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">456</span>,<span class="number">45</span>,<span class="number">66</span>]</span><br><span class="line">al = sorted(a, reverse=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (al)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序案例2</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">4.</span><span class="number">-45.457</span><span class="number">.74</span><span class="number">.7</span><span class="number">.5</span>]</span><br><span class="line"><span class="comment"># 按照数据的绝对值进行排序 </span></span><br><span class="line"><span class="comment"># abs 为求绝对值的函数</span></span><br><span class="line"></span><br><span class="line">al = sorted(a, key=abs, reverse=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> (al)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;函数式编程&quot;&gt;&lt;a href=&quot;#函数式编程&quot; class=&quot;headerlink&quot; title=&quot;函数式编程&quot;&gt;&lt;/a&gt;函数式编程&lt;/h1&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Jedieal</title>
    <link href="http://yoursite.com/2018/06/23/Jedieal/"/>
    <id>http://yoursite.com/2018/06/23/Jedieal/</id>
    <published>2018-06-23T05:51:16.000Z</published>
    <updated>2018-06-25T14:17:00.274Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python学习"><a href="#Python学习" class="headerlink" title="Python学习"></a>Python学习</h1><a id="more"></a><h1 id="Python爬虫"><a href="#Python爬虫" class="headerlink" title="Python爬虫"></a>Python爬虫</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python学习&quot;&gt;&lt;a href=&quot;#Python学习&quot; class=&quot;headerlink&quot; title=&quot;Python学习&quot;&gt;&lt;/a&gt;Python学习&lt;/h1&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
</feed>
